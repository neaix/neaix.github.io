---
layout: post
title: "C++ Primer Notes" 
comments: true
share: true
tags: C/C++
---


<title>C++Primer</title><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 .s1 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 20pt; }
 .s2 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s3 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s4 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s5 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s6 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s7 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s8 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 17pt; }
 .s9 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s10 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s11 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 15pt; }
 .s12 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 15pt; }
 .s13 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 15.5pt; }
 .s14 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 15.5pt; }
 .s15 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s16 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s17 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s18 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 13.5pt; }
 .s19 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 13.5pt; }
 .s20 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s21 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s22 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s23 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s24 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5pt; }
 .s25 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5pt; }
 .s26 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s27 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s28 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s29 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; }
 .s30 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 .s31 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 .s32 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 .s33 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 .s34 { color: #E84B21; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s35 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s36 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s37 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s38 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5.5pt; }
 .s39 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 5.5pt; }
 .p, p { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; margin:0pt; }
 .s40 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s41 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s42 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s43 { color: black; font-family:"Wingdings 2", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s44 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18.5pt; }
 .s45 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s46 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s47 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8.5pt; }
 .s48 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16.5pt; }
 .s49 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s50 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s51 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 19.5pt; }
 .s52 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 17.5pt; }
 .s53 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 17.5pt; }
 .s54 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16.5pt; }
 .s55 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s56 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18.5pt; }
 .s57 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16.5pt; }
 .s58 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16.5pt; }
 .s59 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; }
 .s60 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; }
 .s61 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; }
 .s62 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12.5pt; }
 .s63 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s64 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s65 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s66 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s67 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s68 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 20pt; }
 .s69 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; }
 .s70 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 13pt; }
 .s71 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 13pt; }
 .s72 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8.5pt; }
 .s73 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8.5pt; }
 .s74 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s75 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s76 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; }
 .s77 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; }
 .s78 { color: #808080; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 4.5pt; }
 .s79 { color: #808080; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 4.5pt; }
 .s80 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 .s81 { color: black; font-family:微软雅黑; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 .s82 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12.5pt; }
 li {display: block; }
 #l1 {padding-left: 0pt;counter-reset: c1 0; }
 #l1> li:before {counter-increment: c1; content: counter(c1, decimal)". "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l2 {padding-left: 0pt;counter-reset: c2 1; }
 #l2> li:before {counter-increment: c2; content: counter(c2, decimal)" "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 #l3 {padding-left: 0pt;counter-reset: c3 0; }
 #l3> li:before {counter-increment: c3; content: counter(c3, decimal)". "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 li {display: block; }
 #l4 {padding-left: 0pt;counter-reset: d1 0; }
 #l4> li:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14.5pt; }
 li {display: block; }
 #l5 {padding-left: 0pt;counter-reset: e1 2; }
 #l5> li:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 li {display: block; }
 #l6 {padding-left: 0pt;counter-reset: f1 5; }
 #l6> li:before {counter-increment: f1; content: counter(f1, decimal)". "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l7 {padding-left: 0pt;counter-reset: f2 0; }
 #l7> li:before {counter-increment: f2; content: counter(f2, decimal)". "; color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p class="s1" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">编程风格</p><p class="s2" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s3">年</span>2<span class="s3">月</span>6<span class="s3">日    </span>11:02</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">对于作为函数界定符的花括号，习惯上将其单独一行。</p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 26pt;text-align: left;">如果对象只需读而无须写的话，习惯要把其设为<span class="s5">const</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">标识符命名规则：</p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;line-height: 25pt;text-align: left;">1.<span class="s4">不能出现连续两个下画线。</span></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">2.<span class="s4">不能以下画线紧连大写字母开头。</span></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">3.<span class="s4">定义在函数体外的标识符不能以下画线开头。</span></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">4.<span class="s4">自定义类名最好以大写字母开头。</span></p><p class="s5" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">5.<span class="s4">变量名一般小写<br> </span>6.<span class="s4">多个单词时，以驼峰状区分 ： </span>Student<span class="s4">Loans</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 1pt;padding-left: 174pt;text-indent: 0pt;text-align: center;">分区 知识摘录 的第 <span class="s7">1 </span>页</p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">边缘知识</p><p class="s9" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s10">年</span>2<span class="s10">月</span>6<span class="s10">日    </span>10:52</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">注释不能嵌套</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">初始化：在创建时获得一个特定值</p><p class="s11" style="padding-left: 28pt;text-indent: -23pt;text-align: left;">默认初始化： 如果定义变量时，没有指定初值，则执行默认初始化 默认初始化规则：</p><p class="s12" style="padding-left: 28pt;text-indent: 0pt;line-height: 21pt;text-align: left;">1.<span class="s11">定义于任何函数之外的变量被初始化为 </span>0 <span class="s11">。</span></p><p class="s12" style="padding-left: 28pt;text-indent: 0pt;line-height: 20pt;text-align: left;">2.<span class="s11">定义于函数内部的内置类型变量将不被初始化。</span></p><p class="s12" style="padding-left: 28pt;text-indent: 0pt;line-height: 20pt;text-align: left;">3.<span class="s11">每个类自己决定其初始化对象的方式。（绝大多数类都支持无须显式初始 化定义对象，类为其提供了一个合适的默认值）</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">定义与声明： 声明：一个文件如果想使用别处定义的名字则必须包含对那个名与字的声明。 定义：负责创建与名字关联的实体</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">声明的用法： 在变量前添加<span class="s12">extern</span></p><p class="s11" style="padding-left: 97pt;text-indent: 0pt;line-height: 20pt;text-align: left;">例如： <span class="s12">extern int i ;</span></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">定义只能一次，但是声明可以有多次。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">左值与右值：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">左值：可以放在赋值符号左边的变量，左值表示存储在计算机内存的对象，即 具有对应的可以由用户访问的存储单元。左值相当于地址值。 右值：当一个符号或者常量放在操作符右边的时候，计算机就读取他们的“右 值”，也就是其代表的真实值，右值相当于数据值。右值指的是引用了一个存 储在某个内存地址里的数据。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">头文件不应该包括<span class="s12">using  </span>声明！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">优先级：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">1.cout &lt;&lt; i &lt;&lt; ++i &lt;&lt; endl;  //<span class="s11">这是未定义行为！！！因为编译器没有规定运算</span></p><p class="s11" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">顺序，可能先算<span class="s12">i</span>，也可能先算<span class="s12">++i 2.f()+g()+h();</span></p><p class="s13" style="padding-left: 28pt;text-indent: 0pt;line-height: 17pt;text-align: left;">假如上述函数影响同一对象，则是错误的，会产生未定义行为！</p><p class="s14" style="padding-left: 28pt;text-indent: 0pt;line-height: 22pt;text-align: left;">3.i=i++<span class="s13">；是未定义的！！！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 15pt;padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">i++;     <span class="s11">对运算对象</span>+<span class="s11">1，但求值结果是对象改变前的那个值的副本。 建议无关系时，采用前置增版本！</span></p><p class="s13" style="padding-left: 8pt;text-indent: 0pt;line-height: 20pt;text-align: left;">运算符优先级</p><p class="s15" style="padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">2015<span class="s16">年</span>2<span class="s16">月</span>11<span class="s16">日    </span>10:45</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.65pt" cellspacing="0"><tr style="height:22pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">::</p></td><td style="width:59pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s18" style="padding-left: 15pt;text-indent: 0pt;text-align: left;">. /  <span class="s19">-&gt;</span></p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s19" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">[]  /   ()</p></td><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s19" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">前缀<span class="s18">++/--</span></p></td><td style="width:83pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">cast<span class="s19">类型转换</span></p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s19" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">后缀<span class="s18">++/--</span></p></td><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">~</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s19" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">！</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s19" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">正负号</p></td></tr><tr style="height:22pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">*<span class="s20">解引用</span></p></td><td style="width:59pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">&amp;<span class="s20">取地址</span></p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">()<span class="s20">类型转换</span></p></td><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">sizeof</p></td><td style="width:83pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">new</p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">乘除</p></td><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">%<span class="s20">取模</span></p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">加减</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">移位</p></td></tr><tr style="height:22pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">关系运算符</p></td><td style="width:59pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">&amp;/|/^</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">&amp;&amp;   ||</p></td><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">?  :</p></td><td style="width:83pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">=</p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">,</p></td><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 142pt;text-indent: 0pt;text-align: left;">分区 知识摘录 的第 <span class="s22">4 </span>页</p><p class="s23" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">迭代器</p><p class="s24" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>8<span class="s25">日   </span>15:14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">所有标准库容器都有迭代器</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">auto beg = v.begin() ;   <span class="s6">返回第一个元素的迭代器</span></p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">auto end = v.end() ;    <span class="s6">即尾后迭代器。指向容器尾元素的下一位置 若容器为空，则两者返回的是同一个迭代器</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">迭代器的运算符：</p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">iter -&gt; mem    <span class="s6">等价于 </span>(*iter).mem</p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">-&gt; <span class="s6">运算符能把 </span>* <span class="s6">和 </span>. <span class="s6">两个操作结合在一起</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">检查迭代器<span class="s26">it</span>指向的对象是否为空，要用<span class="s26">iter -&gt; empty</span>() 或者 <span class="s26">(*iter).empty() iter.empty</span>错误！！</p><p class="s6" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 27pt;text-align: left;">两个迭代器不能相加！！！ 迭代器类型：</p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: left;">vector&lt;T&gt;::iterator it ;</p><p class="s26" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">vector&lt;T&gt;::const_iterator  ;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">计算最接近中间元素的迭代器的算法：</p><ol id="l1"><li style="padding-left: 20pt;text-indent: -12pt;text-align: left;"><p class="s26" style="display: inline;">auto mid = v.begin()+v.size()/2<span class="s6">；</span></p></li><li style="padding-left: 20pt;text-indent: -12pt;text-align: left;"><p class="s26" style="display: inline;">auto mid = v.begin()+ ( v.end()-v.begin() ) / 2 ;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">forward_list <span class="s6">不支持递减运算符</span>( -- )</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">迭代器范围：迭代器范围内的元素包括：［<span class="s26">begin , end ) </span>即左闭合区间</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">插入迭代器：是一种迭代器适配器</p><p class="s6" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">接受一个容器，生成一个能实现向给定容器添加元素的迭代器 通过对一个插入迭代器赋值，该迭代器调用容器操作来给容器指定位置插入一个元素</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:74pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">back_inserter(C)</p></td><td style="width:404pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">创建一个使用<span class="s27">push</span>_back的迭代器</p></td></tr><tr style="height:17pt"><td style="width:74pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">front_inserter(C)</p></td><td style="width:404pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">创建一个使用<span class="s27">push_front</span>的迭代器</p></td></tr><tr style="height:30pt"><td style="width:74pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">inserter(C<span class="s28">，</span>p)</p></td><td style="width:404pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;padding-right: 140pt;text-indent: 0pt;line-height: 13pt;text-align: left;">创建一个使用<span class="s27">insert</span>的迭代器，<span class="s27">p</span>为指向容器<span class="s27">C</span>的一个迭代器 赋值后元素被插入到<span class="s27">p</span>所表示元素之前</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s6" style="padding-left: 67pt;text-indent: 0pt;line-height: 186%;text-align: left;">对插入迭代器<span class="s26">++</span>/*  没有任何意义，仍然会返回迭代器本身 插入迭代器有三种类型：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-top: 3pt;padding-left: 36pt;text-indent: -30pt;line-height: 13pt;text-align: left;">iostream <span class="s6">迭代器：要include &lt;iterator&gt; </span>istream_iterator <span class="s6">： 读取输入流 </span>ostream<span class="s6">_iterator ：向一个输出流写数据</span></p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">这些迭代器将它们对应的流当作一个特定类型的元素序列来处理 通过使用这些迭代器，我们可以使用泛型算法从流的对象读取数据和写入数据！！！</p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">当创建一个流迭代器时，必须指定迭代器将要读写的对象类型，还可以将它绑定到一个流<span class="s26">:</span>如：</p><p class="s26" style="padding-left: 51pt;text-indent: 0pt;line-height: 12pt;text-align: left;">istream_iterator&lt;int&gt;  int_it (cin) ;</p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">还可以用默认初始化创建一个可以当作尾后迭代器值使用的迭代器</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 67pt;text-indent: -30pt;line-height: 13pt;text-align: left;">例子：从标准输入读取数据，存入一个<span class="s26">vector istream_iterator&lt;int&gt; in_iter(cin) </span>；<span class="s26">//</span>从<span class="s26">cin</span>读取<span class="s26">int</span></p><p class="s26" style="padding-left: 67pt;text-indent: 0pt;line-height: 13pt;text-align: left;">istream_iterator&lt;int&gt;  eof  <span class="s6">；              //istream 尾后迭代器</span></p><p class="s26" style="padding-top: 1pt;padding-left: 82pt;text-indent: -15pt;text-align: left;">while(in_iter!=eof) vec.push_back(*in_iter++)</p><p class="s6" style="padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;">这个循环每次从<span class="s26">cin</span>读取<span class="s26">int</span>值，再保存在<span class="s26">vec</span>中，<span class="s26">eof</span>被定义成空的<span class="s26">isream_iterator</span>，从而可以当作尾后迭代器来</p><p class="s6" style="padding-left: 67pt;text-indent: 0pt;line-height: 14pt;text-align: left;">使用，一旦流读取时遇到文件尾或者<span class="s26">IO</span>错误，则迭代器的值与尾后迭代器相同！！！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: 0pt;text-align: left;">更加有用的例子：</p><p class="s26" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">istream_iterator&lt;int&gt; in_iter(cin) , eof <span class="s6">；</span></p><p class="s26" style="padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;">vector&lt;int&gt; vec(int_iter,eof) ;</p><p class="s6" style="padding-left: 67pt;text-indent: 0pt;line-height: 14pt;text-align: left;">这个语句会从<span class="s26">cin</span>中一直读取数据  ，直到遇到文件尾或者一个不是<span class="s26">int</span>的数据为止！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">当将<span class="s26">istream_iterator</span>绑定到一个流时，标准库并不保证迭代器立即从流中读取数据。 但是总是会正常读取的，例如下面这个程序，</p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">istream_iterator&lt;int&gt; in_iter(cin), eof; vector&lt;int&gt; vec(in_iter, eof);</p><p class="s6" style="padding-left: 51pt;text-indent: -15pt;line-height: 13pt;text-align: left;">for(auto i : vec){ cout &lt;&lt; i ;</p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 12pt;text-align: left;">}</p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">假如输入<span class="s26">1 2 3 4 ^z</span>，则输出仍然就是<span class="s26">1234  </span>， 不会吞掉最开始输入的数据！！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">istream<span class="s6">_iterator操作：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:33.93pt" cellspacing="0"><tr style="height:17pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">is<span class="s28">tream_iterator&lt;T&gt;   in(is)</span></p></td><td style="width:351pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">in<span class="s28">从</span>is<span class="s28">流中读取类型尾</span>T<span class="s28">的值</span></p></td></tr><tr style="height:17pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">is<span class="s28">tream_iterator</span>&lt;T&gt;   end</p></td><td style="width:351pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">读取类型为<span class="s27">T</span>的值的<span class="s27">is</span>tream_iterator迭代器，表示尾后位置</p></td></tr><tr style="height:30pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">in1==in2</p></td><td style="width:351pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;padding-right: 13pt;text-indent: 0pt;line-height: 13pt;text-align: left;">in1<span class="s28">和</span>in2<span class="s28">必须读取相同类型，如果它们都是尾后迭代器，或绑定到相同的输 入，则相等</span></p></td></tr><tr style="height:17pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">*in</p></td><td style="width:351pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">返回从流中读取的值</p></td></tr><tr style="height:17pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">in-&gt;mem</p></td><td style="width:351pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:30pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">++in                       <span class="s28">，     in++</span></p></td><td style="width:351pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">读取流的下一值，前置版本返回一个指向递增后的迭代器的引用</p><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">后知版本返回旧值</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">ostream_iterator:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">ostream_iterator<span class="s6">的操作</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:33.93pt" cellspacing="0"><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">ostream_iterator&lt;T&gt; out(os) ;</p></td><td style="width:380pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">out<span class="s28">将类型</span>T<span class="s28">的值写到输出流</span>os<span class="s28">中</span></p></td></tr><tr style="height:44pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">ostream_iterator&lt;T&gt; out(os,d);</p></td><td style="width:380pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">out<span class="s28">将类型为</span>T<span class="s28">的值写到输出流</span>os<span class="s28">中，每个值后面都输出一个</span>d<span class="s28">。</span></p><p class="s27" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">d<span class="s28">是一个指向空字符结尾的</span>C<span class="s28">风格字符串</span></p><p class="s28" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">（格式化输出时很有用！！！）</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">out = val</p></td><td style="width:380pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">用<span class="s27">&lt;&lt;</span>运算符将<span class="s27">val</span>写入到<span class="s27">out</span>所绑定的<span class="s27">ostream</span>中，<span class="s27">val</span>的类型必须与<span class="s27">out</span>可写的类型兼容</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">*out , ++out , out++</p></td><td style="width:380pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">没有意义，仍然返回<span class="s27">out</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: 0pt;text-align: left;">ostream_iterator&lt;int&gt; out_iter(cout, &quot; &quot;); for (auto e : vec)</p><p class="s6" style="padding-left: 51pt;text-indent: 0pt;line-height: 14pt;text-align: left;">out_iter = e;       <span class="s26">// </span>把<span class="s26">e</span>写入<span class="s26">cout</span></p><p class="s26" style="padding-left: 162pt;text-indent: 0pt;line-height: 14pt;text-align: left;">//<span class="s6">相当于</span>*out_iter++ = e <span class="s6">， </span>*<span class="s6">和</span>++<span class="s6">对于ostream_iterator可以省略！</span></p><p class="s6" style="padding-left: 51pt;text-indent: 0pt;line-height: 12pt;text-align: left;">cout &lt;&lt; endl;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: 0pt;text-align: left;">还可以调用<span class="s26">copy()</span>来打印<span class="s26">vec</span>中的元素 <span class="s26">copy(vec.begin(),vec.end(),out_iter); cout &lt;&lt; endl</span>；</p><p class="s6" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">反向迭代器：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">递增（<span class="s26">++</span>）一个反向迭代器会移动到前一个元素 有：四种类型</p><p class="s26" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">C.rbegin();</p><p class="s26" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">C.rendl();</p><p class="s26" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">C.crbegin();</p><p class="s26" style="padding-left: 36pt;text-indent: 0pt;text-align: left;">C.crend;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 36pt;text-indent: 0pt;line-height: 13pt;text-align: left;">可以通过<span class="s26">sort</span>一对反向迭代器来使容器整理为递减序！！！ 若<span class="s26">riter</span>是反向迭代器，<span class="s26">riter.base()    </span>返回一个其对应的普通迭代器</p><p class="s29" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">类型</p><p class="s15" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s16">年</span>2<span class="s16">月</span>6<span class="s16">日    </span>10:53</p><p class="s30" style="padding-top: 24pt;padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">main <span class="s31">函数的返回值类型必须是</span>int <span class="s31">内置类型：语言自身定义的类型</span></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:19pt"><td style="width:73pt"><p class="s32" style="padding-left: 2pt;text-indent: 0pt;line-height: 17pt;text-align: left;">int :</p></td><td style="width:59pt"><p class="s32" style="padding-left: 9pt;text-indent: 0pt;line-height: 17pt;text-align: left;">16<span class="s33">位</span></p></td><td style="width:166pt"><p class="s32" style="padding-left: 20pt;text-indent: 0pt;line-height: 17pt;text-align: left;">5<span class="s33">位数（</span>max=32768<span class="s33">）</span></p></td></tr><tr style="height:20pt"><td style="width:73pt"><p class="s32" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">long :</p></td><td style="width:59pt"><p class="s32" style="padding-left: 9pt;text-indent: 0pt;line-height: 18pt;text-align: left;">32<span class="s33">位</span></p></td><td style="width:166pt"><p class="s32" style="padding-left: 20pt;text-indent: 0pt;line-height: 18pt;text-align: left;">10<span class="s33">位数</span></p></td></tr><tr style="height:23pt"><td style="width:73pt"><p class="s32" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">long long :</p></td><td style="width:59pt"><p class="s32" style="padding-left: 8pt;text-indent: 0pt;line-height: 18pt;text-align: left;">64<span class="s33">位</span></p></td><td style="width:166pt"><p class="s32" style="padding-left: 19pt;text-indent: 0pt;line-height: 18pt;text-align: left;">19<span class="s33">位数    （</span>C++<span class="s33">11）</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s30" style="padding-top: 19pt;padding-left: 27pt;text-indent: 0pt;line-height: 19pt;text-align: left;">float  : 6<span class="s31">位有效数字 </span>double <span class="s31">： </span>10<span class="s31">位有效数字</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;line-height: 37pt;text-align: left;">无符号型，类型前缀加 “<span class="s30">unsigned</span>” 选择类型的经验准则：</p><p class="s30" style="padding-left: 27pt;text-indent: 0pt;line-height: 20pt;text-align: left;">1.<span class="s31">当确定数不为负时，用无符号</span></p><ol id="l2"><li style="padding-left: 35pt;text-indent: -7pt;line-height: 19pt;text-align: left;"><p class="s30" style="display: inline;">.<span class="s31">超过</span>int <span class="s31">时就用 </span>long long</p></li><li style="padding-left: 35pt;text-indent: -7pt;line-height: 20pt;text-align: left;"><p class="s30" style="display: inline;">.<span class="s31">浮点数选用</span>double  <span class="s31">， 因为</span>double<span class="s31">与</span>float<span class="s31">计算代价差不多，甚至</span>double<span class="s31">还更快</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">类型转换：</p><p class="s30" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">unsigned char = -1 ;            <span class="s31">对于无符号</span>char<span class="s31">，</span>-1<span class="s31">就是</span>255</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">把浮点数赋值给整数型时，将只保留小数点前面的整数部分</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">当赋给无符号类型一个超出它所表示范围的值时，结果是初始值对无符号类 型表示数值总数取模后的余数。</p><p class="s31" style="padding-left: 50pt;text-indent: 0pt;line-height: 20pt;text-align: left;">例如：<span class="s30">unsigned char ch = 256;</span></p><p class="s30" style="padding-left: 94pt;text-indent: 0pt;line-height: 20pt;text-align: left;">256<span class="s31">对</span>255<span class="s31">取模后的余数为</span>-<span class="s31">1，-1赋值给ch 就转换为了 255.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">当赋给带符号类型一个超出它所表示范围的值时，是未定义的</p><p class="s30" style="padding-left: 50pt;text-indent: 0pt;line-height: 20pt;text-align: left;">ps<span class="s31">：余数的定义：</span></p><p class="s30" style="padding-left: 78pt;text-indent: 0pt;line-height: 20pt;text-align: left;">a=qd+r            //   r<span class="s31">为余数，</span>a,d,q<span class="s31">为整数，</span>d!=0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 72pt;text-indent: -22pt;text-align: left;">切勿混用带符号类型和无符号类型： 例：<span class="s30">unsigned u = 10 ;</span></p><p class="s30" style="padding-left: 100pt;text-indent: 0pt;line-height: 17pt;text-align: left;">int i =-42 ;</p><p class="s30" style="padding-left: 100pt;text-indent: 0pt;line-height: 19pt;text-align: left;">cout  &lt;&lt; i + i &lt;&lt; endl;     //<span class="s31">输出</span>-<span class="s31">84</span></p><p class="s30" style="padding-left: 100pt;text-indent: 0pt;line-height: 19pt;text-align: left;">cout &lt;&lt; u + i &lt;&lt; endl;    //<span class="s31">输出</span>4294967264</p><p class="s31" style="padding-left: 94pt;text-indent: 0pt;line-height: 20pt;text-align: left;">因为 <span class="s30">u + i </span>相加时先把<span class="s30">i</span>变成无符号数，带符号数转换成无符号数会等</p><p class="s31" style="padding-left: 94pt;text-indent: 0pt;line-height: 18pt;text-align: left;">于这个负数加上无符号数的模</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">隐式类型转化：</p><p class="s31" style="padding-left: 73pt;text-indent: 0pt;text-align: left;">1. 本质：被设计得尽可能避免损失精度</p><p class="s31" style="padding-left: 73pt;text-indent: 0pt;text-align: left;">2. 小的类型被提升为大的类型</p><p class="s31" style="padding-left: 73pt;text-indent: 0pt;text-align: left;">3. 右侧运算对象被转化成左侧运算对象</p><p class="s31" style="padding-left: 73pt;text-indent: 0pt;text-align: left;">4. 函数调用时也会发生类型转化</p><p class="s31" style="padding-top: 1pt;padding-left: 94pt;text-indent: -20pt;line-height: 19pt;text-align: left;">5. 数组只有在<span class="s30">decltype</span>、<span class="s30">&amp; </span>、<span class="s30">sizeof</span>、<span class="s30">typeid </span>等运算符时，才会被视为数 组，其余时刻被隐式转化为指针。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">显式转化：</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 20pt;text-align: left;">强制类型转化： <span class="s30">cast-name&lt;type&gt;(expression)</span></p><p class="s30" style="padding-left: 182pt;text-indent: 0pt;line-height: 19pt;text-align: left;">type<span class="s31">是要转化的目标类型 若</span>type<span class="s31">时引用类型，则结果是左值 </span>cast<span class="s31">-name指定执行哪种类型转换</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 19pt;text-align: left;">cast-<span class="s31">name:</span></p><ol id="l3"><li style="padding-left: 116pt;text-indent: -17pt;line-height: 18pt;text-align: left;"><p class="s30" style="display: inline;">static_cast  : <span class="s31">普遍适用。</span></p></li></ol></li></ol></li></ol><p class="s30" style="padding-left: 99pt;text-indent: 0pt;line-height: 20pt;text-align: left;">2.  const_cast <span class="s31">：将常量对象转换成非常量对象，去</span>const<span class="s31">性质！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;text-align: left;">旧式的强制类型转换：</p><ol id="l4"><li style="padding-top: 2pt;padding-left: 94pt;text-indent: -17pt;text-align: left;"><p class="s30" style="display: inline;">type (expr)</p></li><li style="padding-left: 94pt;text-indent: -17pt;text-align: left;"><p class="s30" style="display: inline;">(type) expr</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">const<span class="s31">：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">const   <span class="s31">对象一旦创见后值就不能改变，所以const对象必须初始化 例如： </span>const int i = 12 ; <span class="s31">编译器在编译时，会把用到</span>i<span class="s31">的地方全部用</span>12<span class="s31">替代！！ 且，</span>const<span class="s31">对象仅在当前文件内有效</span></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">类型别名 <span class="s30">typedef</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">两种常规方法：</p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">ty<span class="s31">pedef double wages ;          //wages是double的同义词</span></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">using SI = Sales_item ;            //SI  <span class="s31">是</span>Sales_item<span class="s31">的同义词（</span>C++<span class="s31">11）</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">auto</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">auto<span class="s31">让编译器通过初始值来推算变量类型 （</span>C++<span class="s31">11） 所以</span>auto<span class="s31">的定义必须有初始值！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">auto<span class="s31">语句也能在一条语句中声明多个变量，但是因为一条声明语句中只能有一个基 本的数据类型，所以改语句中所有变量的初始基本数据类型必须一样。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;line-height: 17pt;text-align: left;">decltype</p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">作用：返回操作数的数据类型 在此过程中，编译器分析表达式并得到它的类型，但不实际计算表达式的值！ 例如：<span class="s30">decltype( f() )   sum =</span>0；</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">与引用：</p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">例如： <span class="s30">int i =42 ;</span></p><p class="s30" style="padding-left: 53pt;text-indent: 0pt;line-height: 17pt;text-align: left;">int &amp;r = i ;</p><p class="s30" style="padding-left: 50pt;text-indent: 0pt;line-height: 19pt;text-align: left;">decltype(r) a ;  //<span class="s31">错误，这时</span>a<span class="s31">的类型是 </span>int &amp; <span class="s31">引用类型，必须要初始化</span></p><p class="s30" style="padding-left: 50pt;text-indent: 0pt;line-height: 20pt;text-align: left;">decltype(r+0) b <span class="s31">； </span>//  <span class="s31">正确，这时r+0返回一个具体值而不是一个左值！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 2pt;padding-left: 129pt;text-indent: -123pt;line-height: 19pt;text-align: left;">如果<span class="s30">decltype()  </span>中，使用一个不加括号的变量，则得到的结果是该变量类型 使用一个加了一层或多层括号的变量，编译器就会把它当成 一个表达式，这时会变成引用！！</p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 18pt;text-align: left;">例如：<span class="s30">int i =42 ;</span></p><p class="s30" style="padding-left: 50pt;text-indent: 0pt;line-height: 19pt;text-align: left;">decltype(i) e ;   /<span class="s31">/正确, e 是int</span></p><p class="s30" style="padding-left: 50pt;text-indent: 0pt;line-height: 20pt;text-align: left;">decltype((i)) e ;   //<span class="s31">错误，</span>e <span class="s31">是 </span>int &amp; <span class="s31">，必须初始化</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">——<span class="s30">&gt; </span>切记！！！<span class="s30">decltype(()) </span>的结果永远是引用！</p><p class="s31" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">布尔类型字面值： <span class="s30">true    </span>false 指针字面值    ： <span class="s30">nullptr </span>布尔值不应该参与运算！</p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">符号</p><p class="s15" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s16">年</span>2<span class="s16">月</span>6<span class="s16">日    </span>10:55</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s34" style="padding-left: 5pt;text-indent: 0pt;line-height: 18pt;text-align: left;">操作符：</p><p class="s35" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">endl :  <span class="s36">结束当前行，并将缓冲区刷新</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">.  <span class="s36">点运算符只能用于类类型对象</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 5pt;text-indent: 0pt;line-height: 181%;text-align: left;">%<span class="s36">只能用于两个整数之间操作 位运算符：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23.25pt" cellspacing="0"><tr style="height:23pt"><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">~</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">位求反</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">~<span class="s20">i</span></p></td><td style="width:311pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">0<span class="s20">变</span>1<span class="s20">，</span>1<span class="s20">变</span>0</p></td></tr><tr style="height:23pt"><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">&lt;&lt;</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">左移</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">a&lt;&lt;b</p></td><td style="width:311pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">在右侧插入<span class="s17">0</span>，前者为处理对象，后者为移动位数</p></td></tr><tr style="height:23pt"><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">&gt;&gt;</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">右移</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">a&gt;&gt;b</p></td><td style="width:311pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">在左侧插入<span class="s17">0</span>，前者为处理对象，后者为移动位数</p></td></tr><tr style="height:23pt"><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">&amp;</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">位与</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">a&amp;b</p></td><td style="width:311pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">如果<span class="s17">a,b</span>对应位都是<span class="s17">1</span>，则为<span class="s17">1</span>，否则为<span class="s17">0</span></p></td></tr><tr style="height:23pt"><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">^</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">位异或</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">a^b</p></td><td style="width:311pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">如果<span class="s17">a,b</span>对应位有且只有一个为<span class="s17">1</span>，则为<span class="s17">1</span>，否则为<span class="s17">0</span></p></td></tr><tr style="height:23pt"><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">|</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">位或</p></td><td style="width:33pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s17" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">a|b</p></td><td style="width:311pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s20" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">如果<span class="s17">a,b</span>对应位至少有一个为<span class="s17">1</span>，则为<span class="s17">1</span>，否则为<span class="s17">0</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s36" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">虽然运算对象可以为正或负，但是负的时候符号位如何处理没有规定，所以未定义 建议仅将位运算用于无符号类型</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s36" style="padding-left: 26pt;text-indent: 0pt;line-height: 18pt;text-align: left;">使用移位运算符：</p><p class="s35" style="padding-left: 26pt;text-indent: 0pt;line-height: 19pt;text-align: left;">1UL &lt;&lt;  <span class="s36">27        //生成一个值，该值只有第27位为1</span></p><p class="s36" style="padding-left: 124pt;text-indent: 0pt;line-height: 17pt;text-align: left;">//注意！二进制数也是以整型保存的！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s36" style="padding-left: 26pt;text-indent: 0pt;line-height: 18pt;text-align: left;">例如：统计学生成绩：</p><p class="s36" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">unsigned long quiz1 = 0;    //int只有16位。long有32位 quiz1 |= 1UL &lt;&lt; 27 ;       //学生27通过测试，其余置0</p><p class="s36" style="padding-left: 54pt;text-indent: 0pt;line-height: 18pt;text-align: left;">//注意！！可以用|=  ！！</p><p class="s36" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">// quiz1 &amp;=  ~(1UL &lt;&lt; 27);     //后来发现学生27没有通过，置为0 bool status = quiz1 &amp; (1UL &lt;&lt; 27);//检测第27个学生的通过情况</p><p class="s36" style="padding-left: 26pt;text-indent: 28pt;text-align: left;">//注意！！千万不能cout &lt;&lt; queze1 ，这样会输出10进制的数，而且C++也没 有二进制的格式控制符</p><p class="s36" style="padding-left: 54pt;text-indent: 0pt;line-height: 18pt;text-align: left;">只能用下面的方法来输出二进制！！！</p><p class="s36" style="padding-left: 54pt;text-indent: 0pt;line-height: 18pt;text-align: left;">while (quiz1 != 0)   //不是 quiz1 /2 != 0</p><p class="s36" style="padding-left: 54pt;text-indent: 0pt;line-height: 18pt;text-align: left;">{</p><p class="s36" style="padding-top: 1pt;padding-left: 61pt;text-indent: 0pt;line-height: 18pt;text-align: left;">cout &lt;&lt; quiz1 % 2; quiz1 /= 2;</p><p class="s36" style="padding-left: 33pt;text-indent: 0pt;line-height: 17pt;text-align: left;">}</p><p class="s35" style="padding-left: 26pt;text-indent: 0pt;line-height: 19pt;text-align: left;">//<span class="s36">且这样输出以后会有</span>28<span class="s36">位，因为第一位默认为</span>0<span class="s36">，因为我们是移动</span>n<span class="s36">位代表第</span>n</p><p class="s36" style="padding-left: 26pt;text-indent: 0pt;line-height: 19pt;text-align: left;">个学生，而本来就是存在<span class="s35">1</span>位的！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">sizeof <span class="s36">运算符：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 30pt;text-indent: 0pt;line-height: 19pt;text-align: left;">1. sizeof <span class="s36">并不实际计算其运算对象的值</span></p><p class="s36" style="padding-left: 27pt;text-indent: 0pt;line-height: 18pt;text-align: left;">2. 对指针执行<span class="s35">sizeof</span>只会对指针计算大小，不会对其指向对象计算大小</p><p class="s36" style="padding-left: 27pt;text-indent: 0pt;line-height: 18pt;text-align: left;">3. 对解引用指针执行<span class="s35">sizeof </span>运算得到指针所指向的对象所占空间的大小</p><p class="s36" style="padding-left: 27pt;text-indent: 0pt;line-height: 18pt;text-align: left;">4. 对数组执行<span class="s35">sizeof</span>得到整个数组所占空间大小（<span class="s35">sizeof</span>不会把数组当成指针） 5. 对<span class="s35">string /  </span>vector 对象执行sizeof 只返回该类型固定部分大小，不计算元素</p><p class="s36" style="padding-left: 47pt;text-indent: 0pt;line-height: 17pt;text-align: left;">所占空间</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s36" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">例子： <span class="s35">sizeof(array)/sizeof(*array)   //  </span>返回数组array 的元素数量</p><p class="s29" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">字符以及字符串</p><p class="s15" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s16">年</span>2<span class="s16">月</span>6<span class="s16">日    </span>12:30</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">字面值常量：形如 <span class="s30">42 </span>这样的就是字面值常量，每个字面值常量对应一种数据类 型。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 93pt;text-indent: 0pt;text-align: left;">字面值的类型是对应数据类型最小的那个。 如果一个字面值连与之关联的最大数据类型都不能容纳下，则产生错 误。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">字符字面值：   <span class="s30">&#39; a &#39;</span></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">字符串字面值： <span class="s30">&quot;Hello Wold!&quot;</span></p><p class="s30" style="padding-left: 27pt;text-indent: 0pt;line-height: 19pt;text-align: left;">1.<span class="s31">字符串字面值的类型实际上是由常量字符构成的数组。</span></p><p class="s30" style="padding-left: 27pt;text-indent: 0pt;line-height: 91%;text-align: left;">2.<span class="s31">编译器在每个字符串的结尾添加一个空字符</span>&#39;\<span class="s31">0</span>&#39;   <span class="s31">，因此字符串字面值实际长度 多</span>1 3.<span class="s31">如果两个字符串字面值位置紧邻且仅由空格、缩进、换行符分隔，则它们实 际上是一个整体。</span></p><p class="s31" style="padding-top: 1pt;padding-left: 71pt;text-indent: -44pt;text-align: left;">例如：<span class="s30">&quot;haha&quot;   &quot;ni hao&quot; &quot; ni hao &quot; </span>算作一个字符</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 27pt;text-indent: -22pt;text-align: left;">定义和初始化<span class="s30">string</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">string s; string s2=s1;</p><p class="s30" style="padding-left: 27pt;text-indent: 0pt;line-height: 94%;text-align: left;">string s2( s1 ) ; string s = &quot; haha &quot;; string s ( &quot;haha&quot; ) <span class="s31">；</span></p><p class="s30" style="padding-left: 27pt;text-indent: 0pt;line-height: 18pt;text-align: left;">string s( 10, &#39;c&#39; ) ;        //<span class="s31">得到</span>ccccccccc</p><p class="s30" style="padding-left: 103pt;text-indent: 0pt;line-height: 20pt;text-align: left;">|-----&gt;<span class="s31">不能是字符串！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">——————〉<span class="s30">string </span>的最后一位不是<span class="s30">&#39;\0&#39; </span>！！！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">如果直接使用‘<span class="s30">=</span>’是拷贝初始化</p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">如果不使用‘<span class="s30">=</span>’是直接初始化</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">string <span class="s31">中的最后一个元素是</span>str[str<span class="s31">.</span>size()-1]</p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 20pt;text-align: left;">string <span class="s31">的操作：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">is  <span class="s31">&gt;&gt; s           若is是cin ，则遇到空白符就停止！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 90%;text-align: left;">getline ( is , s ) ; 1.<span class="s31">换行符会被</span>is<span class="s31">读进来，但是不会存入</span>s<span class="s31">中，一开始读入换行符则</span>s<span class="s31">为空，若要保留输 入时的分行格式，则必须手动添加。</span></p><p class="s30" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;line-height: 19pt;text-align: left;">2.<span class="s31">执行读取操作时，</span>string  <span class="s31">会自动忽略开头的空白（即空格，换行，制表等），并 从一个真正的字符开始读起，直到遇到下一处空白</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">s.empty() ;   <span class="s31">是否为空</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 19pt;text-align: left;">s.size()  ;        <span class="s31">返回字符个数（</span>string::size_type<span class="s31">类型）——</span>ps:<span class="s31">如果一个表达式中已经有 了</span>size<span class="s31">函数，就不要用</span>int<span class="s31">了，避免混用数据类型可能带来的问题。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">s[n] ;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">&lt; , &gt; <span class="s31">，</span>&lt;= , &gt;= ,== ,!=       <span class="s31">比较两者第一对相异字符的字典序（</span>a&gt;A<span class="s31">）</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 19pt;text-align: left;">+        <span class="s31">当</span>string<span class="s31">对象和字面值混在一条语句中时，必须确保每一个</span>+<span class="s31">号两侧的运算对象 至少有一个是</span>string<span class="s31">。如：</span>string s= &quot;aaa&quot;+&quot;bbb&quot;+ str ; <span class="s31">是错误的！</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 13pt;padding-left: 8pt;text-indent: 0pt;line-height: 183%;text-align: left;">处理<span class="s30">string</span>中的字符： 一下表格中的函数都在头文件<span class="s30">cctype</span>中：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.47pt" cellspacing="0"><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">isalnum(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是字谜或数字时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">isalpha(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是字母时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">iscntrl(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>为控制字符时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">isdigit(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是数字时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">isgraph(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>不是空格但可打印时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">islower(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是小写字母时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">isprint(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是可打印字符时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">ispunct<span class="s33">(c)</span></p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是标点符号时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">isspace(c)</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">当<span class="s32">c</span>是空白时为真（空格，制表符，回车，换行，进纸符）</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.47pt" cellspacing="0"><tr style="height:21pt"><td style="width:73pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">is<span class="s33">upper(c)</span></p></td><td style="width:378pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">当<span class="s32">c</span>是大写字母时为真</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">tolower</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">大写变小写，小写不变</p></td></tr><tr style="height:24pt"><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">toupper</p></td><td style="width:378pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">小写变大写，大写不变</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 20pt;text-align: left;">C<span class="s31">风格字符串：</span></p><p class="s31" style="padding-left: 30pt;text-indent: -22pt;line-height: 18pt;text-align: left;">（尽量不要使用）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 30pt;text-indent: 0pt;line-height: 20pt;text-align: left;">本质：字符数组且以<span class="s30">&#39;\0&#39;</span>结尾</p><p class="s30" style="padding-left: 30pt;text-indent: 0pt;line-height: 20pt;text-align: left;">C<span class="s31">风格字符串函数：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:27.49pt" cellspacing="0"><tr style="height:24pt"><td style="width:124pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">strlen(p)</p></td><td style="width:386pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">返回长度</p></td></tr><tr style="height:43pt"><td style="width:124pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">strcmp(p1,p2)</p></td><td style="width:386pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-top: 1pt;padding-left: 2pt;padding-right: 10pt;text-indent: 0pt;line-height: 19pt;text-align: left;">比较<span class="s32">p1</span>，<span class="s32">p2</span>的相等性，若<span class="s32">==</span>，返回<span class="s32">0</span>，若<span class="s32">p1&gt;p2,</span>返回一个正 值<span class="s32">,</span>若<span class="s32">p1&lt;p2</span>则返回一个负值</p></td></tr><tr style="height:24pt"><td style="width:124pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">strcat(p1,p2)</p></td><td style="width:386pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">将<span class="s32">p</span>2附加到p1之后，返回p1</p></td></tr><tr style="height:24pt"><td style="width:124pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">strcpy(p1,p2)</p></td><td style="width:386pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">将<span class="s32">p2</span>拷贝给<span class="s32">p1</span>，返回<span class="s32">p1</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;line-height: 19pt;text-align: left;">注意，<span class="s30">C</span>风格字符串比较的时候，只能用<span class="s30">strcmp</span>，不能用<span class="s30">&gt;   &lt; </span>，因为对于编译器数组 是指针，实际上比较的变成了两个指针，地址之间是不能比较的！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 8pt;text-indent: 0pt;line-height: 19pt;text-align: left;">混用<span class="s30">string </span>与 <span class="s30">C</span>风格字符串： 允许以<span class="s30">C</span>风格字符串给<span class="s30">string</span>赋值或者初始化 在<span class="s30">string</span>的加法中允许使用<span class="s30">C</span>风格字符串作为其中一个运算对象</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 20pt;text-align: left;">string<span class="s31">中有 </span>c_str() <span class="s31">成员函数 ， 把</span>string<span class="s31">变成</span>C<span class="s31">风格字符串</span></p><p class="s30" style="padding-left: 8pt;text-indent: 0pt;line-height: 20pt;text-align: left;">s.c_str()   <span class="s31">， 返回</span>s<span class="s31">的</span>C<span class="s31">风格字符串</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">多维数组：</p><p class="s31" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">严格来说，<span class="s30">C++</span>没有多维数组，多维数组其实是数组的数组。 当一个数组的元素仍然为数组时，前一个维度表示数组本身大小，后一个维度 表示其元素（也是数组）的大小。</p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">例如：<span class="s30">int a[3][4]  ;    //</span>大小为<span class="s30">3</span>的数组，每个元素是含有<span class="s30">4</span>个整数的数组</p><p class="s37" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">输入输出</p><p class="s38" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s39">年</span>2<span class="s39">月</span>6<span class="s39">日   </span>10:59</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">当遇到文件结束符（<span class="s40">end-of-file</span>）<span class="s40">,      </span>或者一个无效输入时，<span class="s40">istream</span>对象的状态会变为无效，即为假</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">end of file <span class="p">在 </span>Mac<span class="p">中是 </span>ctrl + d</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 15pt;text-align: left;">一个流一旦发生错误，后续的<span class="s40">IO</span>操作都会失败。</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">确定一个流对象状态最简单的方法是：</p><p class="s40" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: left;">while(cin &gt;&gt; word ){</p><p style="padding-left: 21pt;text-indent: 0pt;line-height: 13pt;text-align: left;">。。。</p><p class="s40" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">导致缓冲刷新的原因有：</p><p class="s40" style="padding-left: 7pt;text-indent: 0pt;line-height: 15pt;text-align: left;">1.<span class="p">程序正常结束。</span></p><p class="s40" style="padding-left: 7pt;text-indent: 0pt;line-height: 14pt;text-align: left;">2.<span class="p">缓冲区满</span></p><ol id="l5"><li style="padding-left: 16pt;text-indent: -8pt;line-height: 14pt;text-align: left;"><p class="s40" style="display: inline;">endl      <span class="p">换行并刷新缓冲区</span></p></li><li style="padding-left: 16pt;text-indent: -8pt;line-height: 14pt;text-align: left;"><p class="s40" style="display: inline;">flush     <span class="p">仅仅刷新缓冲区</span></p></li></ol><p class="s40" style="padding-left: 7pt;text-indent: 0pt;line-height: 14pt;text-align: left;">5. unitbuf   <span class="p">在每个输出操作之后刷新缓冲区</span></p><ol id="l6"><li style="padding-left: 18pt;text-indent: -10pt;line-height: 15pt;text-align: left;"><p class="s40" style="display: inline;">nounitbuf   <span class="p">回到正常缓冲方式</span></p><p class="s40" style="padding-left: 15pt;text-indent: 0pt;line-height: 12pt;text-align: left;">...</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 15pt;text-align: left;">（<span class="s40">PS</span>：如果程序崩溃，缓冲区不会被自动刷新，调试时，要确保已经刷新了缓冲区，否则会导致错误信息残留）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">文件输入输出：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">头文件：<span class="s40">fsream </span>定义了三个类型：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:18pt"><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ifstream</p></td><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">从给定文件读取数据</p></td></tr><tr style="height:18pt"><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ofstream</p></td><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">从给定文件写入数据</p></td></tr><tr style="height:18pt"><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">fstream</p></td><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">可读写给定文件</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s43" style="padding-top: 4pt;padding-left: 74pt;text-indent: 0pt;text-align: left;"></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-top: 10pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">fstream<span class="p">特有的操作</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:35.47pt" cellspacing="0"><tr style="height:18pt"><td style="width:142pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">fstream        <span class="s42">fstrm ;</span></p></td><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">创建一个未绑定的文件流</p></td></tr><tr style="height:18pt"><td style="width:142pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">fstream   <span class="s42">fstrm</span>(s) <span class="s42">;</span></p></td><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">创建一个<span class="s41">fstream</span>，并打开并绑定名为<span class="s41">s</span>的文件，模式默认</p></td></tr><tr style="height:18pt"><td style="width:142pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">fstream   <span class="s42">fstrm </span>(s , mode)<span class="s42">;</span></p></td><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">创建一个<span class="s41">fstream</span>，并按指定模式打开名为<span class="s41">s</span>的文件</p></td></tr><tr style="height:18pt"><td style="width:142pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">fstrm.open (s)</p></td><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">打开名为<span class="s41">s</span>的文件，并将文件与<span class="s41">fstrm</span>绑定。模式默认</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:19.47pt" cellspacing="0"><tr style="height:16pt"><td style="width:142pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">fstrm.close()</p></td><td style="width:269pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">关闭与<span class="s41">fstrm</span>绑定的文件，返回<span class="s41">void</span></p></td></tr><tr style="height:18pt"><td style="width:142pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">fstrm.is<span class="s42">_open()</span></p></td><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">返回一个<span class="s41">bool</span>值，是否成功打开与<span class="s41">fstrm</span>关联的文件</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;">mode <span class="p">文件模式：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:19.47pt" cellspacing="0"><tr style="height:18pt"><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">in</p></td><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">以读方式打开</p></td></tr><tr style="height:18pt"><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">out</p></td><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">以写方式打开</p></td></tr><tr style="height:18pt"><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">app</p></td><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">每次写操作前均定位到文件末尾</p></td></tr><tr style="height:18pt"><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ate</p></td><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">打开文件后立即定位到文件末尾</p></td></tr><tr style="height:18pt"><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">trunc</p></td><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">截断文件（即清空文件）</p></td></tr><tr style="height:18pt"><td style="width:32pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">binary</p></td><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">以二进制方式进行<span class="s41">IO</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;">指定文件模式限制：</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">1.  只有当<span class="s40">out</span>也被设定时，才可以设定<span class="s40">trunc</span>模式</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">2. 只要<span class="s40">trunc</span>没被设定，就可以设定<span class="s40">app</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;text-indent: 0pt;text-align: center;">没有指定模式时以默认模式打开：</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">1. 与<span class="s40">ifstream</span>关联的文件默认以<span class="s40">in</span>模式打开</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">2.  与<span class="s40">ofstream</span>关联的文件默认以<span class="s40">out</span>模式打开</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">3.  与<span class="s40">fstream</span>关联的文件默认以<span class="s40">in</span>和<span class="s40">out</span>模式打开</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">默认情况下，以<span class="s40">out</span>模式打开文件会丢失已有数据 阻止文件被清空的方法是：</p><p class="s40" style="padding-left: 8pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1.  <span class="p">同时指定</span>app<span class="p">模式</span></p><p style="padding-left: 29pt;text-indent: -23pt;line-height: 14pt;text-align: left;">如： <span class="s40">ofstream app(&quot;file&quot;, ofstream::app) ;  /</span>/隐含打开文件 <span class="s40">ofstream app(&quot;file&quot;, ofstream::out | ofstream::app ) </span>；</p><p class="s40" style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">2.<span class="p">或者以</span>fstream<span class="p">打开（因为包含了</span>in<span class="p">模式，所以不会被清空）</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">每次调用<span class="s40">open</span>时都可以改变其文件模式：</p><p class="s40" style="padding-left: 21pt;text-indent: 0pt;line-height: 12pt;text-align: left;">ofstream out ;</p><p class="s40" style="padding-left: 21pt;text-indent: 0pt;line-height: 14pt;text-align: left;">out.open (&quot;file&quot;) ;  //<span class="p">模式隐含输出和截断</span></p><p class="s40" style="padding-left: 21pt;text-indent: 0pt;line-height: 15pt;text-align: left;">out<span class="p">.open(&quot;file&quot;,ofstream::app) ;  //模式为输出和追加</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;">通常情况下，<span class="s40">out</span>模式意味着同时使用<span class="s40">trunc</span>模式</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;text-align: left;">头文件<span class="s40">sstream</span>定义了三个类型来支持内存 <span class="s40">IO    </span>，这些类型可以向<span class="s40">string</span>写<span class="s40">/</span>读入数据，就像<span class="s40">string</span>是一个<span class="s40">IO</span>流一样</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 21pt;text-indent: 0pt;line-height: 93%;text-align: left;">i<span class="p">stringstream  从string读取数据 </span>ostringstream  <span class="p">从</span>string<span class="p">写入数据 </span>stringstream  <span class="p">既可以读也可以写</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 21pt;text-indent: 0pt;text-align: left;">s<span class="p">tringstream 特有的操作：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:19.47pt" cellspacing="0"><tr style="height:18pt"><td style="width:82pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">sstream strm;</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">strm<span class="s42">是一个未绑定的</span>stringstream<span class="s42">对象，</span>sstream<span class="s42">是头文件</span>sstream<span class="s42">中定义的一个类型。</span></p></td></tr><tr style="height:18pt"><td style="width:82pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">sstream strm(s) ;</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">strm<span class="s42">是一个</span>sstream<span class="s42">对象，保存一个</span>s<span class="s42">的拷贝</span></p></td></tr><tr style="height:18pt"><td style="width:82pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">strm.str()</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">返回<span class="s41">strm</span>所保存的<span class="s41">string</span>拷贝</p></td></tr><tr style="height:18pt"><td style="width:82pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">strm.str(s)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">将<span class="s41">s</span>拷贝到<span class="s41">strm</span>中，返回<span class="s41">void</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;line-height: 15pt;text-align: left;">一个使用<span class="s40">istringstream</span>存入人电话号码的例子：</p><p class="s40" style="padding-left: 38pt;text-indent: 0pt;line-height: 15pt;text-align: left;">istringstream      <span class="p">主要用于一些工作对整行进行处理，一些工作对行内单个单词进行处理时。</span></p><p style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;line-height: 15pt;text-align: center;">输入示例 ： <span class="s40">lee </span>602432 3423526 34325346</p><p class="s40" style="padding-left: 44pt;text-indent: 0pt;line-height: 15pt;text-align: center;">draw <span class="p">178281919</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 70pt;text-indent: -16pt;text-align: left;">struct PersonInfo { string name; vector&lt;string&gt; phones;</p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">string line, word;</p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">// will hold all the records from the input</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">vector&lt;PersonInfo&gt; people;</p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">// read the input a line at a time until end-of-file (or other error)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">while (getline(is, line)) {</p><p style="padding-left: 70pt;text-indent: 0pt;text-align: left;">PersonInfo info;           // object to hold this record&#39;s data</p><p style="padding-left: 70pt;text-indent: 0pt;text-align: left;">istringstream record(line); // bind record to the line we just read</p><p style="padding-top: 1pt;padding-left: 70pt;text-indent: 0pt;line-height: 14pt;text-align: left;">record &gt;&gt; info.name;       // read the name不会读取空格以及空格后的东西，相当于<span class="s40">cin </span>while (record &gt;&gt; word)     // read the phone numbers 从空格后开始读取</p><p style="padding-left: 86pt;text-indent: 0pt;line-height: 13pt;text-align: left;">info.phones.push_back(word); // and store them</p><p style="padding-left: 70pt;text-indent: 0pt;text-align: left;">people.push_back(info); // append this record to people</p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 32pt;text-align: left;">当我们逐步构造输出，最后希望一起打印时，优选用  <span class="s40">ostringstream</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">操纵符控制输出输出格式：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:35.47pt" cellspacing="0"><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">定义在<span class="s41">iostream</span>中的操纵符</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">用法如：<span class="s41">cout &lt;&lt; boolalpha &lt;&lt;bool_val &lt;&lt; noboolalpha ;</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">boolalpha</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">将<span class="s41">ture</span>和<span class="s41">false</span>输出为字符串形式</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">noboolalpha</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">恢复默认<span class="s41">1</span>，<span class="s41">0</span>输出</p></td></tr><tr style="height:46pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">showbase</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">对整型输出表示进制的前缀：</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">前缀<span class="s41">0x   </span>16进制</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">前缀<span class="s41">0    8</span>进制</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">noshowbase</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">showpoint</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">对浮点值总是显示小数点</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">noshowpoint</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">showpos</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">对非负数显示<span class="s41">+</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">noshowpos</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">uppercase</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">在<span class="s41">16</span>进制中打印<span class="s41">0X</span>，在科学计数法中打印<span class="s41">E</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">nouppercase</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">在<span class="s41">16</span>进制中打印<span class="s41">0x</span>，在科学计数法中打印<span class="s41">e</span>（默认）</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">dec</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">整数显示十进制</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">hex</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">整数显示十六进制</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">oct</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">整数显示八进制</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">left</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">左对齐，值右侧添加填充字符</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.47pt" cellspacing="0"><tr style="height:16pt"><td style="width:130pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">right</p></td><td style="width:329pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 12pt;text-align: left;">右对齐（默认）</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">internal</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">控制负数的符号的位置，它左对齐符号，右对齐值，中间用空格填满</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">scientific</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">浮点数显示为科学记数法</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">hexfloat</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">浮点值显示为十六进制<span class="s41">(c++11)</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">defaultfloat</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">重置浮点值显示为十进制<span class="s41">(c++11)</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">unitbuf</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">每次输出后都刷新缓冲区</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">no<span class="s42">unitbuf</span></p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">恢复正常的缓冲区刷新方式</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">skipws</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">输入运算符，跳过空白符（默认）</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">noskipws</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">输入运算符，不跳过空白符（可以使输入时，读取空白符）</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">flush</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">刷新<span class="s41">ostream</span>缓冲区</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ends</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">插入空字符，然后刷新<span class="s41">ostream</span>缓冲区</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">endl</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">插入换行，然后刷新<span class="s41">ostream</span>缓冲区</p></td></tr><tr style="height:17pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">定义在<span class="s41">iomanip</span>中的操作符</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">set<span class="s42">w(n)</span></p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">下一个（不是全部）数字或者字符串的最小空间为<span class="s41">n</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">se<span class="s42">tprecision(n)</span></p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">将浮点数精度设置为<span class="s41">n</span></p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">setfill(&#39;c&#39;)</p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">用指定字符代替默认的空格来补白输出</p></td></tr><tr style="height:18pt"><td style="width:130pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">set<span class="s42">base(b)</span></p></td><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">将整数输出为<span class="s41">b</span>进制（对<span class="s41">2</span>进制无效！）</p></td></tr></table><p class="s44" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">引用</p><p class="s45" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s46">年</span>2<span class="s46">月</span>6<span class="s46">日    </span><span class="s47">13:47</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">定义引用时，把引用和它的初始值绑定在一起，而不是把初始值拷贝。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">无法令引用重新绑定到另外一个对象，因此引用必须初始化 引用即别名</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;line-height: 202%;text-align: left;">引用本身不是一个对象，故不能定义引用的引用。 一般情况下，引用都要和与之绑定的对象类型严格匹配。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s49" style="padding-top: 2pt;padding-left: 164pt;text-indent: 0pt;text-align: left;">分区 知识摘录 的第 <span class="s50">24 </span>页</p><p class="s51" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">指针</p><p class="s2" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s3">年</span>2<span class="s3">月</span>6<span class="s3">日    </span><span class="s47">13:50</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">指针与引用的不同点</p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">1.<span class="s52">指针本身就是个对象</span></p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">2.<span class="s52">允许对指针赋值和拷贝</span></p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">3.<span class="s52">可以更改指针指向</span></p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">ps<span class="s52">：引用只是对象的一个别名，而指针复杂多了</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">因为引用不是对象，没有实际地址，所以不能定义指向引用的指针</p><p class="s52" style="padding-left: 288pt;text-indent: 0pt;text-align: left;">但是可以定义指向指针的引用</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">获得空指针的三种方法：</p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">int *pr = nullpr;                (<span class="s52">优选，</span>C++<span class="s52">11</span>)</p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">int *pr = NULL;</p><p class="s53" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">int *pr = 0;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">建议：初始化所有的指针。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">空指针无地址，即地址<span class="s53">=</span>0 所有：<span class="s53">while(pr){</span></p><p class="s53" style="padding-left: 85pt;text-indent: 0pt;text-align: left;">...</p><p class="s53" style="padding-left: 58pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 58pt;text-indent: 0pt;text-align: left;">直到真正为空时终止。</p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">语句</p><p class="s9" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s10">年</span>2<span class="s10">月</span>8<span class="s10">日    </span>14:42</p><p class="s11" style="padding-top: 24pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">范围 <span class="s12">for  </span>：</p><p class="s12" style="padding-top: 20pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">for ( declaration : expression ){</p><p class="s12" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">......</p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">每次迭代，<span class="s12">declaration </span>部分的变量会被初始化为 <span class="s12">expression </span>的下一个元素值。 若想要在之后的<span class="s12">......</span>中改变对象中的值，必须把循环变量定义成引用！</p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">for ( auto &amp;c : s ) {</p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">范围<span class="s12">for</span>循环内，不能改变其所遍历序列的大小！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">while  <span class="s11">语句条件内以及循环体内的变量每次迭代都经历从创建到销毁的过程。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">break <span class="s11">语句负责终止离他最近的 </span>while , do-while , for <span class="s11">， </span>switch <span class="s11">语句，并从这些语 句后的第一条开始继续执行</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">continue  <span class="s11">语句终止最近的循环中的当前迭代并立即开始下一次迭代。 只能出现在 </span>for , while , do while <span class="s11">循环内部。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">return <span class="s11">语句的作用是把控制权交到调用该函数的地方</span></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">void <span class="s11">函数可以直接 </span>return;</p><p class="s51" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">进制</p><p class="s2" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s3">年</span>2<span class="s3">月</span>8<span class="s3">日    </span>14:47</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">16<span class="s4">进制的数组映射表示方法：</span></p><p class="s5" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">const string hexdigits = &quot;0123456789ABCDEF&quot; ;</p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">这样就导致了<span class="s5">hexdigits[11]=</span>A ， 10进制和16进制就对照起来了！</p><p class="s1" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">模板</p><p class="s2" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s3">年</span>2<span class="s3">月</span>8<span class="s3">日    </span>14:49</p><p class="s4" style="padding-top: 28pt;padding-left: 5pt;text-indent: 0pt;line-height: 198%;text-align: left;">有类模板和函数模板 实例化：编译器根据模板创建类或函数的过程成为实例化</p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">数组</p><p class="s45" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s46">年</span>2<span class="s46">月</span>8<span class="s46">日   </span>15:38</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">字符数组的特殊性：</p><p class="s48" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">最后一定要有一个空字符<span class="s54">&#39;\0&#39; </span>， 若没有，则系统自动添加<span class="s54">&#39;\0&#39; </span>数组下标类型：<span class="s54">size_t</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">用数组的时候编译器会把它转化为指针。 所有当使用数组作为一个 <span class="s54">auto </span>时，推断得到的是指针而非数组。 但是当使用<span class="s54">decltype()</span>时，返回数组类型，</p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">例如：<span class="s54">int a[10]={0};</span></p><p class="s54" style="padding-left: 54pt;text-indent: 0pt;line-height: 19pt;text-align: left;">decltype(a) b;</p><p class="s48" style="padding-left: 54pt;text-indent: 0pt;line-height: 22pt;text-align: left;">则<span class="s54">b</span>是大小为<span class="s54">10</span>的数组！（切记，连同数组大小一同返回！！！）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">数组不是类类型，故没有成员函数，但是可用标准库函数</p><p class="s54" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">int *beg = begin ( array ) ;  <span class="s48">指向首元素</span></p><p class="s54" style="padding-left: 5pt;text-indent: 0pt;line-height: 22pt;text-align: left;">int *end = end ( array ) ;   <span class="s48">指向</span>array<span class="s48">尾元素的下一位置</span></p><p class="s54" style="padding-left: 5pt;text-indent: 0pt;line-height: 23pt;text-align: left;">begin()  <span class="s48">， end()   定义在iterator头文件中</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">内置的下标运算符所用的索引值不是无符号型，这与<span class="s54">vector</span>和<span class="s54">string</span>不同</p><p class="s48" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">函数</p><p class="s9" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s10">年</span>2<span class="s10">月</span>9<span class="s10">日    </span>15:22</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">args  <span class="s11">即 argument</span>s    <span class="s11">？</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">函数在头文件中声明，在源文件中定义。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">每次调用函数，会用传入的实参对形参进行创建并初始化。 如果形参是引用类型，则会被绑定到对应实参上去</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">对于指针形参：当执行指针拷贝操作时，拷贝的是指针的地址，拷贝之后，两个 形参的指针和实参的指针是两个指针，但是因为指针使我们可以间接地访问它所 指的对象，所以通过指针可以修改对象值。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">建议：在<span class="s12">C++</span>中优选引用，哪怕不需要改变实参值，也优选引用。</p><p class="s11" style="padding-left: 50pt;text-indent: 0pt;line-height: 20pt;text-align: left;">（因为拷贝大的类类型对象或者容器对象比较低效） 如果函数无须改变引用形参的值，最好将其声明为常量引用！ 如 <span class="s12">const string  &amp;str</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">虽然函数只能返回一个值，但是引用形参给了我们一个方法可以等效地返回多个 结果。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;line-height: 182%;text-align: left;">当实参有<span class="s12">const</span>时，这时它传给常量或者非常量对象都是可以的！ 不要<span class="s12">return</span>返回局部对象的引用或指针</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">重载函数： 函数名字相同但是形参数量或者类型不用的函数。 编译器会根据传递的实参类型推断想要的是哪个函数。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">默认实参：</p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;line-height: 20pt;text-align: left;">1.<span class="s11">在函数的多次调用中都被赋予一个相同的值的形参</span></p><p class="s12" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">2.<span class="s11">默认形参的初始化可以出现在函数的形参列表中。但是！一旦一个形参有了默 认值，则之后的所有形参都必须有默认值 </span>3.<span class="s11">如果要使用默认形参，则只要在调用函数的时候省略该实参就行了</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">重载函数的最佳匹配：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">基本思想：寻找实参与形参类型最接近的那个 若检查之后没有一个重载函数能脱颖而出的，那么调用错误</p><p class="s29" style="padding-left: 5pt;text-indent: 0pt;line-height: 21pt;text-align: left;">随机数</p><p class="s15" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s16">年</span>2<span class="s16">月</span>22<span class="s16">日    </span>15:41</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">定义在头文件<span class="s30">&lt;random&gt;</span>中</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 49pt;text-indent: 0pt;line-height: 20pt;text-align: left;">default_random_engine e;       //<span class="s31">生成随机无符号数</span></p><p class="s30" style="padding-left: 49pt;text-indent: 0pt;line-height: 20pt;text-align: left;">e();                 //<span class="s31">调用对象来生成下一个随机数</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24.25pt" cellspacing="0"><tr style="height:24pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">随机数引擎操作</p></td><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:24pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">engine  e ;</p></td><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">默认生成随机数</p></td></tr><tr style="height:24pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">engine  e(s) ;</p></td><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">使用整型值<span class="s32">s</span>作为种子</p></td></tr><tr style="height:24pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">e.seed(s)</p></td><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s33" style="padding-left: 2pt;text-indent: 0pt;line-height: 21pt;text-align: left;">使用种子<span class="s32">s</span>重置引擎状态</p></td></tr><tr style="height:24pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">e.min()</p></td><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:24pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s32" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">e.max()</p></td><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:23pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:157pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">选择一个种子：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 71pt;text-indent: -21pt;text-align: left;">可以使用时间： 头文件：<span class="s30">&lt;ctime&gt;</span></p><p class="s30" style="padding-left: 71pt;text-indent: 0pt;line-height: 18pt;text-align: left;">default_random_engine el(time(0)) <span class="s31">；</span></p><p class="s30" style="padding-left: 71pt;text-indent: 0pt;line-height: 19pt;text-align: left;">//<span class="s31">time()返回从一个特定时刻到现在有多少秒</span></p><p class="s30" style="padding-left: 71pt;text-indent: 0pt;line-height: 20pt;text-align: left;">//<span class="s31">只适用于前后间隔时间很长的情况，否则都在一秒内会导致随机数相同</span></p><p class="s23" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">顺序容器综述</p><p class="s24" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>11<span class="s25">日    </span>12:54</p><p style="padding-top: 16pt;padding-left: 7pt;text-indent: 0pt;line-height: 201%;text-align: left;">每一个容器都定义在一个与容器类型名相同的头文件中 顺序容器类型：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.29pt" cellspacing="0"><tr style="height:17pt"><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">vector</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">可变大小数组</p></td><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">支持快速随机访问</p></td><td style="width:131pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在尾部添删元素很快</p></td></tr><tr style="height:17pt"><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">deque</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">双端队列</p></td><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">支持快速随机访问</p></td><td style="width:131pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在头尾添删元素很快</p></td></tr><tr style="height:17pt"><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">list</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">双向链表</p></td><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">只支持双向顺序访问</p></td><td style="width:131pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在任何位置添删元素都很快</p></td></tr><tr style="height:17pt"><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">forward_list</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">单向链表</p></td><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">只支持单向顺序访问</p></td><td style="width:131pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在任何位置添删元素都很快</p></td></tr><tr style="height:17pt"><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">array</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">固定大小数组</p></td><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">支持快速随机访问</p></td><td style="width:131pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">不能添删元素</p></td></tr><tr style="height:17pt"><td style="width:56pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">string</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">与<span class="s41">vector</span>相似，专门保存字符</p></td><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">支持快速随机访问</p></td><td style="width:131pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在尾部添删元素很快</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 7pt;text-indent: 0pt;line-height: 14pt;text-align: left;">string <span class="p">和 </span>vector   <span class="p">将元素保存在连续的空间中，所以用下标来计算其地址是非常快速的，但是在中间位置操作就会很耗 时，因为在一次中间位置插入或删除元素后，需要移动操作位置之后的所有元素。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 39pt;text-indent: -31pt;line-height: 14pt;text-align: left;">建议：现代<span class="s40">C++</span>程序应该使用标准库容器，而不是更原始的数据结构，如内置数组 通常使用<span class="s40">vector</span>是最好的选择</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 39pt;text-indent: 0pt;text-align: left;">确定使用哪种顺序容器：</p><ol id="l7"><li style="padding-left: 39pt;text-indent: -12pt;line-height: 14pt;text-align: left;"><p style="display: inline;">一般优选<span class="s40">vector</span></p></li></ol></li></ol><p class="s40" style="padding-left: 27pt;text-indent: 0pt;line-height: 14pt;text-align: left;">2.  <span class="p">要求在中间插入或删除元素时，用</span>list<span class="p">或者</span>forward_list</p><p class="s40" style="padding-left: 27pt;text-indent: 0pt;line-height: 14pt;text-align: left;">3.  <span class="p">只在头尾添删用</span>deque</p><p class="s40" style="padding-left: 39pt;text-indent: -12pt;line-height: 14pt;text-align: left;">4.    <span class="p">在输入时需要在中间位置插入元素，其后又要能随机访问时，一种假如是可以通过排序使得要插入位置变成最 后一个的话就用</span>vector<span class="p">，另一种倘若不能通过排序解决可以考虑在输入时用</span>list<span class="p">，输入完成后把内容拷贝到</span>vector</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">容器操作：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:21.25pt" cellspacing="0"><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">类型别名</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">iterator</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">此容器类型的迭代器类型</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">const_iterator</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">只能读取元素但不能修改元素的迭代器类型</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">size_type</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">无符号整数类型，足够保存此种容器类型最好可能容器的大小</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">difference_type</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">带符号整数类型，足够保存两个迭代器之间的距离</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">value_type</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">元素类型</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">reference</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">元素的左值类型</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">const_reference</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">元素的<span class="s41">const</span>左值类型</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">构造函数</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">C  c ;</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:30pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;line-height: 12pt;text-align: left;">C  c1  (c2) ;</p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">C  c1=<span class="s42">c2 ；</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">支持一个容器到另一个容器的拷贝，两个容器类型必须相同</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">C  c( b , e ) ;</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将迭代器<span class="s41">b</span>和<span class="s41">e</span>指定的范围内的元素拷贝到<span class="s41">c</span>（<span class="s41">array</span>不支持）</p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">C  c<span class="s42">{a,b,c,...} ;</span></p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">C  c<span class="s42">={a,b,c...}  ;</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.25pt" cellspacing="0"><tr style="height:29pt"><td style="width:102pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 4pt;text-indent: 0pt;line-height: 13pt;text-align: left;">C  c  <span class="s42">(n) ;</span></p><p class="s41" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">C  c (n,t) ;</p></td><td style="width:432pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">n<span class="s42">个元素</span></p><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">n<span class="s42">个初始化为</span>t<span class="s42">的元素</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">赋值，<span class="s41">swap</span>，<span class="s41">assign</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c1 = c2</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c1 = {a,b,c...}</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">(array<span class="s42">不支持</span>)</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">a.swap(b)  <span class="s42">成员函数</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">交换<span class="s41">a,b</span>的元素。（两个容器类型相同）</p></td></tr><tr style="height:45pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;line-height: 12pt;text-align: left;">swap (a,b)</p><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">非成员函数</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">等价（<span class="s41">swap</span>：元素本身并未交换，只是交换了两个容器内部的数据结构）</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">（<span class="s41">sway</span>不进行拷贝删除或者插入操作，故迭代器指针引用都不会失效（除非<span class="s41">sway</span>两个</p><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">array<span class="s42">））</span></p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">seq.assign (b,e)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">将<span class="s41">seq</span>中的元素替换为迭代器<span class="s41">b</span>和<span class="s41">e</span>所表示的范围中的元素，<span class="s41">b,e</span>不能指向<span class="s41">seq</span></p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">（<span class="s41">array</span>和关联容器不适用）</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">seq.assign (il)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s41">seq</span>中的元素替换为初始化列表<span class="s41">il</span>中的元素（<span class="s41">array</span>和关联容器不适用）</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">seq.assign(n,t)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s41">seq</span>中的元素替换为<span class="s41">n</span>个值为<span class="s41">t</span>的元素 （<span class="s41">array</span>和关联容器不适用）</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">大小</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.size()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">c<span class="s42">中元素的数目（不支持</span>forward_list<span class="s42">）</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.max_size()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">c<span class="s42">可保存的最大元素数目</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.empty()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">若<span class="s41">c</span>中存储了元素，返回<span class="s41">false </span>，否则返回 <span class="s41">true</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">添加<span class="s41">/</span>删除元素</p><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">（容器通用）</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">（不适用<span class="s41">array</span>）注：不同容器中接口不同</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.insert(args)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s41">args</span>拷贝进<span class="s41">c</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.emplace(inits)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">使用<span class="s41">inits</span>构造出<span class="s41">c</span>中的一个元素</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.erase(args)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">删除<span class="s41">args</span>指定元素</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">c.clear<span class="s42">()</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">删除<span class="s41">c</span>中所有元素</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:59pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">向顺序容器添加元素</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;padding-right: 204pt;text-indent: 0pt;line-height: 91%;text-align: left;">这些操作会改变容器大小，<span class="s41">array</span>不支持这些操作 <span class="s41">forward_list</span>有自己专有版本的<span class="s41">insert</span>和<span class="s41">emplace forward_list</span>不支持<span class="s41">push_back</span>和<span class="s41">emplace_back vector</span>和<span class="s41">string</span>不支持<span class="s41">push_front </span>和 <span class="s41">emplace_front</span></p></td></tr><tr style="height:29pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.push_back(t)</p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">c.emplace_back(args)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">在<span class="s41">c</span>的尾部创建一个值为<span class="s41">t</span>或由<span class="s41">args</span>创建的元素，返回<span class="s41">void</span></p></td></tr><tr style="height:29pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;padding-right: 4pt;text-indent: 0pt;text-align: left;">c.push_front(t) c.emplace_front(args)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">在<span class="s41">c</span>的头部创建一个值为<span class="s41">t</span>或由<span class="s41">args</span>创建的元素，返回<span class="s41">void</span></p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;line-height: 12pt;text-align: left;">c.insert(p,t)</p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">c<span class="s42">.emplace(p,args)</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 136pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在迭代器<span class="s41">p</span>指向的元素之前创建一个值为<span class="s41">t</span>或者由<span class="s41">args</span>创建的元素 返回指向新添加元素的迭代器</p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.insert(p,n,t)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 141pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在迭代器<span class="s41">p</span>指向的元素之前插入<span class="s41">n</span>个值为<span class="s41">t</span>或者由<span class="s41">args</span>创建的元素 返回指向新添加的第一个元素的迭代器，若<span class="s41">n</span>为<span class="s41">0</span>，返回<span class="s41">p</span></p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.insert(p,b,e)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在迭代器<span class="s41">p</span>指向的元素之前插入<span class="s41">b</span>和<span class="s41">e</span>指定范围内的元素（两端都可取到，）</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回指向新添加的第一个元素的迭代器，若范围为空，返回<span class="s41">p</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.insert(p,il)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">il<span class="s42">是一个花括号包围的值列表，将这些值插入到</span>p<span class="s42">之前，返回新添加第一个元素的迭代器</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">PS<span class="s42">：向一个</span>vector,string,deque<span class="s42">插入元素，会使所有指向容器的迭代器、引用和指针失效</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">使用这些操作时，要切记各类容器自身特性避免影响性能</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:45pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">向顺序容器删除元素</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 289pt;text-indent: 0pt;line-height: 14pt;text-align: left;">不适用与<span class="s41">array forward_list</span>有特殊版本的<span class="s41">erase</span></p><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">forward_list<span class="s42">不支持</span>pop_back <span class="s42">； </span>vector<span class="s42">和</span>string <span class="s42">不支持</span>pop_front</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.pop_back()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">删除<span class="s41">c</span>中尾元素</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.25pt" cellspacing="0"><tr style="height:15pt"><td style="width:102pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">c.pop_front()</p></td><td style="width:432pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">删除<span class="s41">c</span>中首元素</p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.erase(p)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 83pt;text-indent: 0pt;line-height: 14pt;text-align: left;">删除迭代器<span class="s41">p</span>所指定的元素，返回一个指向被删元素之后的元素的迭代器。 若<span class="s41">p</span>指向尾元素，返回尾后迭代器，若<span class="s41">p</span>是尾后迭代器，则函数行为未定义</p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.erase(b,e)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 24pt;text-indent: 0pt;line-height: 14pt;text-align: left;">删除迭代器<span class="s41">b</span>和<span class="s41">e</span>所指定范围内的元素。返回指向最后一个被删元素之后元素的迭代器。 若<span class="s41">e</span>本身就是尾后迭代器，则返回尾后迭代器</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.clear()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">删除<span class="s41">c</span>中所有元素，返回<span class="s41">void</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.back()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回<span class="s41">c</span>中尾元素的引用，<span class="s41">c</span>为空时未定义</p></td></tr><tr style="height:31pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.front()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回<span class="s41">c</span>中首元素的引用，<span class="s41">c</span>为空时未定义</p><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">PS:<span class="s42">注意，</span>begin<span class="s42">()和end()时返回迭代器，而这两个是返回引用！</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c[n]   /   c.at(n)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回下标为<span class="s41">n</span>的元素的引用</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:45pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">改变顺序容器大小</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;padding-right: 173pt;text-indent: 0pt;text-align: left;">如果当前大小大于所要求大小，则删除后部元素 如果当前大小小于所要求大小，则将新元素添加到后部 不适用与<span class="s41">array</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.resize(n)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">调整<span class="s41">c</span>大小为<span class="s41">n</span>个元素</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.resize(n,t)</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">调整<span class="s41">c</span>大小为<span class="s41">n</span>个元素，任何新添加的元素都初始化为<span class="s41">t</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">关系运算符</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 14pt;text-indent: 0pt;line-height: 15pt;text-align: left;">=             <span class="s42">!=</span></p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">所有容器都支持</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">&lt; , &lt;= , &gt; , &gt;=</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">无序容器不支持</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">比较两个容器实际上是进行元素的逐对比较</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">获取迭代器</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.begin() , c.end()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.cbegin(),c.cend()</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回<span class="s41">const_iterator     </span>（当不需要写时，最好用带<span class="s41">c</span>版本！）</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">反向容器的额外成员</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">不支持<span class="s41">forward_list</span></p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">reverse_iterator</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">按逆序寻址元素的迭代器</p></td></tr><tr style="height:30pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;padding-right: 4pt;text-indent: 0pt;text-align: left;">const<span class="s42">_</span>reverse_iterato r</p></td><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">不能修改元素的逆序迭代器（但是迭代器可<span class="s41">++</span>）</p></td></tr><tr style="height:17pt"><td style="width:102pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:432pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 23pt;text-indent: -16pt;text-align: left;">容器操作使迭代器失效的几个情况： 添加元素时：</p><p class="s40" style="padding-left: 29pt;text-indent: 0pt;line-height: 14pt;text-align: left;">i.  <span class="p">对于</span>vector<span class="p">与</span>string <span class="p">，如果存储空间被重新分配，则指针、引用都会失效</span></p><p style="padding-left: 135pt;text-indent: 0pt;text-align: left;">如果存储空间未重新分配，指向插入位置之前的元素的迭代器、指针、引用仍有效，之 后的失效</p><p style="padding-top: 1pt;padding-left: 96pt;text-indent: -77pt;line-height: 14pt;text-align: left;">ii. 对于<span class="s40">deque</span>，如果在首尾添加元素，迭代器失效，但是指向存在元素的指针和引用不会失效 如果在首尾之外添加元素，则指针引用迭代器全部失效</p><p style="padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;">iii. 对于<span class="s40">list  </span>和forward_list ， 指向容器的迭代器（包括尾后迭代器和首前迭代器）、指针、引用仍有效</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">删除元素时：</p><p class="s40" style="padding-left: 29pt;text-indent: 0pt;line-height: 14pt;text-align: left;">i.  <span class="p">对于</span>vector<span class="p">与</span>string <span class="p">，指向被删除之前的元素的迭代器引用指针仍有效。</span></p><p class="s40" style="padding-left: 103pt;text-indent: -75pt;line-height: 14pt;text-align: left;">ii.  <span class="p">对于</span>deque <span class="p">，如果删除首尾元素，则除了尾后迭代器，别的迭代器、指针、引用仍然有效 如果删除首尾之外的元素，则全部失效</span></p><p style="padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;">iii. 对于<span class="s40">list </span>和<span class="s40">forward_list </span>，全部仍然有效</p><p class="s55" style="padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">string</p><p class="s24" style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>12<span class="s25">日    </span>13:45</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.17pt" cellspacing="0"><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">构造<span class="s41">string</span>的方法：</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">string  s<span class="s42">(cp,n)</span></p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">s<span class="s42">是</span>cp<span class="s42">指向的数组中前</span>n<span class="s42">个字符的拷贝，此数组至少含</span>n<span class="s42">个字符</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">string  s(s2,pos2)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">s<span class="s42">是</span>string  s2 <span class="s42">从下标 </span>pos2 <span class="s42">开始的字符的拷贝，若</span>pos2&gt;s2.size()<span class="s42">，则未定义</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">string  <span class="s42">s(s2,pos2,len2)</span></p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">s<span class="s42">是</span>string  s2 <span class="s42">从下标</span>pos2<span class="s42">开始</span>len2<span class="s42">个字符的拷贝。</span></p></td></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">子字符串操作</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:31pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.substr(pos,n)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回一个<span class="s41">string</span>，包含<span class="s41">s</span>中从<span class="s41">Pos</span>开始的<span class="s41">n</span>个字符的拷贝。</p><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">pos<span class="s42">默认值为</span>0<span class="s42">，</span>n<span class="s42">默认值为</span>s.size()-pos<span class="s42">，即拷贝从</span>pos<span class="s42">开始的所有字符。</span></p></td></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">修改<span class="s41">string</span>的操作</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:45pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.insert(pos,args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;padding-right: 158pt;text-indent: 0pt;line-height: 91%;text-align: left;">在<span class="s41">pos</span>之前插入，<span class="s41">pos</span>可以是一个下标或者迭代器 接受下标版本：返回一个指向<span class="s41">s</span>的引用； 接受迭代器版本：返回指向第一个插入字符的迭代器</p></td></tr><tr style="height:31pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.erase(pos,len)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">删除<span class="s41">pos</span>开始的<span class="s41">len</span>个字符，若<span class="s41">len</span>省略，则删至末尾为止</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回指向<span class="s41">s</span>的引用</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.assign(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s41">s</span>中的字符替换为<span class="s41">args</span>指定的字符，返回一个指向<span class="s41">s</span>的引用</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.append(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s41">args</span>追加到<span class="s41">s</span>后，返回一个指向<span class="s41">s</span>的引用</p></td></tr><tr style="height:45pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.replace(range,args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;padding-right: 140pt;text-indent: 0pt;line-height: 91%;text-align: left;">删除<span class="s41">s</span>中范围<span class="s41">range</span>内的字符，替换为<span class="s41">args</span>指定的字符。 <span class="s41">range</span>是一个下标和一个长度，或者是一对指向<span class="s41">s</span>的迭代器 返回指向<span class="s41">s</span>的引用</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">args<span class="s42">可以是下面形式之一</span></p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">str</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">字符串</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">str,pos,len</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">str<span class="s42">中从</span>pos<span class="s42">开始最多</span>len<span class="s42">个字</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">cp,len</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">从<span class="s41">cp</span>指向的字符数组的前<span class="s41">len</span>个字符</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">cp</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">cp<span class="s42">指向的以空字符结尾的字符数组（</span>cp<span class="s42">即</span>c<span class="s42">风格字符串）</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">n,c</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">n<span class="s42">个字符</span>c</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b,e</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">迭代器<span class="s41">b</span>和<span class="s41">e</span>指定的范围内的字符</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">初始化列表</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:59pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">string<span class="s42">的搜索操作</span></p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">每个搜索操作返回一个<span class="s41">string::size_type</span>值，表示匹配发生位置下标（是一个<span class="s41">unsigned</span>类 型，最好用<span class="s41">auto</span>去保存）</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">若搜索失败，则返回一个名为<span class="s41">string::npos</span>的<span class="s41">stastic</span>成员</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">搜索是大小写敏感的</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.find(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">查找第一次出现</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.rfind(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">查找最后一次出现（逆向搜索，但是单词顺序不变，如<span class="s41">&quot;yes&quot;</span>逆向仍然认为是<span class="s41">&quot;yes&quot;</span>）</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.find_first_of(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">在<span class="s41">s</span>中查找<span class="s41">args</span>中任意一个字符第一次出现的位置</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.find_last_of(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">在<span class="s41">s</span>中查找<span class="s41">args</span>中任意一个字符最后一次出现的位置</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.find_first_not_of(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">在<span class="s41">s</span>中查找第一个不在<span class="s41">args</span>中的字符</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.find_last_not_of(args)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">在<span class="s41">s</span>中查找最后一个不在<span class="s41">args</span>中的字符</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">args<span class="s42">必须是以下形式之一</span></p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">c,pos</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">从<span class="s41">s</span>中位置<span class="s41">pos</span>开始查找字符<span class="s41">c </span>， <span class="s41">pos</span>默认为<span class="s41">0</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s2,pos</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">从<span class="s41">s</span>中位置<span class="s41">pos</span>开始查找字符串<span class="s41">s2</span>，<span class="s41">pos</span>默认为<span class="s41">0</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">cp,pos</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">从<span class="s41">s</span>中位置<span class="s41">pos</span>开始查找指针<span class="s41">cp</span>指向的以空字符结尾的<span class="s41">C</span>风格字符串，<span class="s41">pos</span>默认为<span class="s41">0</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">cp,pos,n</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">从<span class="s41">s</span>中位置<span class="s41">pos</span>开始查找指针<span class="s41">cp</span>指向数组的前<span class="s41">n</span>个字符，<span class="s41">pos</span>和<span class="s41">n</span>无默认值</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.17pt" cellspacing="0"><tr style="height:16pt"><td style="width:149pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">compare<span class="s42">函数</span></p></td><td style="width:405pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">s.compare <span class="s42">等于返回</span>0<span class="s42">，小于返回负数，大于返回整数</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.compare (s2)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">比较<span class="s41">s</span>和<span class="s41">s2</span></p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.compare (pos1,n1,s2)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s41">s</span>中从<span class="s41">pos1</span>开始的<span class="s41">n1</span>个字符与<span class="s41">s2</span>进行比较</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.compare (pos1,n1,s2,po2,n2)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.compare (cp)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">s<span class="s42">与</span>c<span class="s42">风格字符串</span>cp<span class="s42">比较</span></p></td></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">s.compare (pos1,n1,cp)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">s.compare (pos<span class="s42">1,n1,cp,n2</span>)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">数值转换</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">数值数据与<span class="s41">string</span>之间的转换</p></td></tr><tr style="height:17pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">to<span class="s42">_string(val)</span></p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">一组重载函数，返回数值<span class="s41">val</span>的<span class="s41">string</span>表示，<span class="s41">val</span>可以是任何算术类型</p></td></tr><tr style="height:45pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stoi(s,p,b)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回<span class="s41">s</span>的起始子串（表示整数内容）的数值。<span class="s41">b</span>表示转换所用的基数，默认为<span class="s41">10 p</span>是<span class="s41">size_t</span>的指针，用来保存<span class="s41">s</span>中第一个非数值字符的下标，<span class="s41">p</span>默认为<span class="s41">0</span>（即不保存下标） 下面同理。</p></td></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stol(s,p,b)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stoul(s,p,b)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stoll(s,p,b)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stoull(s,p,b)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stof(s,p)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stod(s,p)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:149pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stold(s,p)</p></td><td style="width:405pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p class="s56" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">vector</p><p class="s45" style="padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">2015<span class="s46">年</span>2<span class="s46">月</span>8<span class="s46">日    </span>14:51</p><p class="s48" style="padding-top: 29pt;padding-left: 8pt;text-indent: 0pt;line-height: 22pt;text-align: left;">因为引用不是对象，所以<span class="s54">vector</span>不能包含引用。 组成<span class="s54">vector</span>的元素也可是<span class="s54">vector</span></p><p class="s48" style="padding-top: 18pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">定义和初始化<span class="s54">vector </span>：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.1pt" cellspacing="0"><tr style="height:27pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">vector &lt;T&gt;  v</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 21pt;text-align: left;">执行默认初始化</p></td></tr><tr style="height:27pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">vector &lt;T&gt;  v  <span class="s58">（v1）</span></p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">注意！两个<span class="s57">vector</span>的类型必须相同！</p></td></tr><tr style="height:27pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">vector &lt;T&gt;  v =  <span class="s58">v1</span></p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">注意！两个<span class="s57">vector</span>的类型必须相同！</p></td></tr><tr style="height:27pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">vector &lt;T&gt;  v ( n , val )</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">v <span class="s58">包含了</span>n<span class="s58">个重复的元素，元素值都为</span>val</p></td></tr><tr style="height:27pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">vector &lt;T&gt;  v ( n )</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">v <span class="s58">包含了</span>n<span class="s58">个重复执行了值初始化的对象</span></p></td></tr><tr style="height:25pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">vector &lt;T&gt;  v {a,b,c...}</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:25pt"><td style="width:232pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">vector &lt;T&gt;  v ={a,b,c...}</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s54" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">vector <span class="s48">操作：（</span>string<span class="s48">也支持下面所有操作）</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.1pt" cellspacing="0"><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v.push_back()</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">在尾端添加元素。（范围<span class="s57">for</span>循环中不能添减元素）</p></td></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v.empty()</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v.size()</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">返回元素个数，类型：<span class="s57">vector&lt;T&gt;::size_type</span></p></td></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v[n]</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">返回第<span class="s57">n</span>个位置上的引用</p></td></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v1 = v2</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v = {a,b,c...}</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v1 == v2</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">v1 != v2</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:27pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">&lt; , &lt;= ,&gt; , &gt;=</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;">字典序</p></td></tr><tr style="height:48pt"><td style="width:100pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s57" style="padding-top: 2pt;padding-left: 3pt;padding-right: 47pt;text-indent: 0pt;text-align: left;">iter + n iter -  n</p></td><td style="width:376pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 22pt;text-align: left;">向前移动<span class="s57">n</span>个位置</p><p class="s58" style="padding-left: 3pt;text-indent: 0pt;line-height: 23pt;text-align: left;">向后移动<span class="s57">n</span>个位置</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><span><img width="636" height="32" alt="image" src="C++Primer/Image_001.png"/></span></p><p class="s54" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">iter<span class="s48">1-iter2  它们之间的距离，可正可负</span></p><p class="s35" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">deque</p><p class="s59" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s60">年</span>2<span class="s60">月</span>11<span class="s60">日    </span><span class="s61">14:44</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">deque是双向开口的连续性存储空间。虽说是连续性存储空间，但这种连续性只是表面上的，实 际上它的内存是动态分配的，它在堆上分配了一块一块的动态储存区，每一块动态存储去本身是 连续的，deque自身的机制把这一块一块的存储区虚拟地连在一起。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">它首次插入一个元素，默认会动态分配512字节空间，当这512字节空间用完后，它会再动态分配 自己另外的512字节空间，然后虚拟地连在一起。deque的这种设计使得它具有比vector复杂得多 的架构、算法和迭代器设计。它的性能损失比之vector，是几个数量级的差别。所以说，deque 要慎用</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;line-height: 203%;text-align: left;">与vector相比，deque功能上的不同之处在于： 1）两端都能快速插入元素和删除元素（vector只在尾端快速进行此类操作）。</p><p class="s62" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2）存取元素时，deque的内部结构会多一个间接过程，所以元素的存取和迭代器的动作会稍稍慢 一些。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">3）迭代器需要在不同区块间跳转，所以必须是特殊的智能型指针，非一般指针。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">4）在对内存区块有所限制的系统中（例如PC系统），deque可以内含更多元素，因为它使用不止 一块内存。因此deque的max_size()可能更大。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">5）deque不支持对容量和内存重分配时机的控制。特别要注意的是，除了头尾两端，在任何地方 插入或删除元素，都将导致指向deque元素的任何指针、引用、迭代器失效。不过，deque的内存 重分配优于vector，因为其内部结构显示，deque不必在内存重分配时复制所有元素。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">6）deque的内存区块不再被使用时，会被释放。deque的内存大小是可缩减的。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-top: 2pt;padding-left: 126pt;text-indent: 0pt;text-align: left;">分区 顺序容器 的第 <span class="s64">47 </span>页</p><p class="s55" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">array</p><p class="s24" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>12<span class="s25">日    </span>10:25</p><p class="s40" style="padding-top: 18pt;padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: center;">array<span class="p">的大小也是其类型的一部分 所以定义</span>array<span class="p">时，要指定大小： </span>array&lt;int , 42&gt; i  <span class="p">；</span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 27pt;text-align: left;">由于大小是类型的一部分，所以<span class="s40">array</span>不支持普通容器的构造函数 与其他容器不同，一个默认构造的<span class="s40">array</span>是非空的：它包含了与其大小一样多的元素，元素被默认初始化 如果对<span class="s40">array</span>列表初始化，初始值的数目必须小于等于<span class="s40">array</span>的大小</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">但是<span class="s40">array</span>不支持列表赋值！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">内置数组类型不能拷贝，但是对<span class="s40">array</span>可以拷贝，但是要求类型一样，又因为大小是<span class="s40">array</span>类型的一部分，所以大小也要求 一样</p><p class="s23" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">关联容器综述</p><p class="s24" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>13<span class="s25">日    </span>15:28</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;line-height: 14pt;text-align: left;">关联容器都支持普通容器的操作！ 不支持顺序容器的位置相关的操作（如<span class="s40">push_back</span>，<span class="s40">push_front</span>这种） <span class="s6">原因是关联容器是一句关键字存储的！</span></p><p class="s6" style="padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;">关联容器的迭代器是双向的</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">8<span class="s6">大类型</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.27pt" cellspacing="0"><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">按关键字有序保存元素</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">map</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">关联数组；关键字 <span class="s27">- </span>值</p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">set</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">集合；   关键字即值</p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">multimap</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">关键字可重复出现的<span class="s27">map</span></p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">multiset</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">关键字可重复出现的<span class="s41">set</span></p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">无序集合</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">unordered_map</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">用哈希函数组织的<span class="s27">map</span></p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">unordered_set</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">用哈希函数组织的<span class="s27">set</span></p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">unordered_multimap</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">哈希组织的<span class="s27">map</span>，关键字可重复出现</p></td></tr><tr style="height:17pt"><td style="width:108pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">unordered_multiset</p></td><td style="width:168pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">哈希组织的<span class="s27">set</span>，关键字可重复出现</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">对于有序容器，关键字类型必须定义元素比较的方法，默认情况下，标准库使用<span class="s40">&lt;</span>比较</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.27pt" cellspacing="0"><tr style="height:30pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">关联容器的额外的类 型别名</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">key_type</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">此容器类型的关键字类型（使用方法<span class="s27">:set&lt;string&gt;::key_type</span>）</p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">mapped_type</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">每个关键字关联的类型，只适用于<span class="s41">map</span></p></td></tr><tr style="height:30pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">value_type</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">对于<span class="s27">set,</span>于<span class="s27">key_type</span>相同</p><p class="s28" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">对于<span class="s27">map</span>，为<span class="s27">pair&lt;const  key_type  ,mapped_type&gt;</span></p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:44pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">关联容器迭代器</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;padding-right: 49pt;text-indent: 0pt;text-align: left;">记住： 一个<span class="s27">map</span>的<span class="s27">value_type</span>是一个<span class="s27">pair</span>，我们可以改变<span class="s27">pair</span>的值，但是不能改变关键字成员的值 <span class="s42">一个</span><span class="s41">set</span><span class="s42">中的关键字也是</span><span class="s41">const</span><span class="s42">，不能改变</span></p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">当使用一个迭代器遍历一个有序关联容器时，元素按关键字升序遍历</p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:96pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">添加元素</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-top: 1pt;padding-left: 1pt;padding-right: 75pt;text-indent: 0pt;line-height: 92%;text-align: left;">（对于<span class="s27">map</span>和<span class="s27">set</span>插入已存在元素对其没有任何影响） 对于<span class="s27">map</span>插入时切记元素是一个<span class="s27">pair</span>，如果对于想要插入的数据没有一个现成的<span class="s27">pair </span><span class="s42">就创建一个</span><span class="s41">pair</span><span class="s42">，可用的创建方法：</span></p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">{word,1}   /<span class="s42">/优选</span></p><p class="s27" style="padding-left: 1pt;padding-right: 280pt;text-indent: 0pt;text-align: left;">make_pair(word,1) pair&lt;string,size_t&gt;(word,1) map&lt;string,size_t&gt;::value_type(word,1)</p></td></tr><tr style="height:44pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.insert(v)</p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">c.emplace(args)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;padding-right: 16pt;text-indent: 0pt;line-height: 14pt;text-align: left;">v<span class="s28">是</span>value_type<span class="s28">类型的对象；</span>args<span class="s28">用来构造一个元素 </span><span class="s42">插入元素，返回一个</span><span class="s41">pair</span><span class="s42">，包含一个指向具有指定关键字的元素，以及一个指示插入是否成功的 </span>bool<span class="s28">值</span></p></td></tr><tr style="height:29pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;padding-right: 50pt;text-indent: 0pt;text-align: left;">c.insert(b,e) c.insert(il)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">b,e<span class="s28">表示一个</span>c::value_type<span class="s28">类型的范围，</span>il<span class="s28">是这类值的花括号列表，返回</span>void</p></td></tr><tr style="height:29pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;padding-right: 25pt;text-indent: 0pt;text-align: left;">c.insert(p,v) c.emplace(p,args)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">从迭代器<span class="s27">p</span>处开始搜索新元素应该存储的位置，返回一个迭代器，指向具有给定关键词的元素</p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.27pt" cellspacing="0"><tr style="height:15pt"><td style="width:103pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;line-height: 11pt;text-align: left;">删除元素</p></td><td style="width:452pt;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.erase(k)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">从<span class="s27">c</span>中删除每个关键字为<span class="s27">k</span>的元素，返回一个<span class="s27">size_type</span>值，指出被删除元素数量</p></td></tr><tr style="height:30pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.erase(p)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-top: 1pt;padding-left: 1pt;padding-right: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">从<span class="s27">c</span>中删除迭代器<span class="s27">p</span>指向的元素（<span class="s27">p!=c.end()</span>），返回一个指向<span class="s27">p</span>之后元素的迭代器，若<span class="s27">p</span>指向<span class="s27">c</span>中的尾 元素，则返回<span class="s27">c.end()</span></p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.erase(b,e)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">返回<span class="s27">e</span></p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:31pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">访问（查找）元素</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;padding-right: 230pt;text-indent: 0pt;line-height: 14pt;text-align: left;">lower_bround <span class="s28">和 </span>upper_bound <span class="s28">不适用于无序容器 下标和</span>at<span class="s28">操作只适用于非</span>const</p></td></tr><tr style="height:30pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.find(k)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;padding-right: 267pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回指向第一个关键字<span class="s27">k</span>的元素的迭代器 若<span class="s27">k</span>不在，返回尾后迭代器</p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.count(k)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">返回关键字<span class="s27">=</span>k的元素的数量</p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.lower_bound(k)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">返回指向第一个关键字不小于<span class="s27">k</span>的元素的迭代器</p></td></tr><tr style="height:17pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.upper_bound(k)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">返回指向第一个关键字大于<span class="s27">k</span>的元素的迭代器</p></td></tr><tr style="height:57pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-left: 1pt;padding-right: 153pt;text-indent: 0pt;line-height: 14pt;text-align: left;">PS<span class="s28">：在</span>multi-<span class="s28">中 若</span>k<span class="s28">在容器中，则</span>lower_bound()<span class="s28">指向第一个具有给定关键词的元素</span></p><p class="s27" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">upper_bound()<span class="s28">指向最后一个匹配关键字元素之后的位置</span>(<span class="s28">用来得到具有该关键字的元素范围</span>)</p><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">若<span class="s41">k</span>不在容器中，<span class="s41">lower</span>和<span class="s41">up</span><span class="s27">per</span>会返回相等的迭代器，指向一个不影响排序的关键字插入位置</p></td></tr><tr style="height:57pt"><td style="width:103pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">c.equal_range(k)</p></td><td style="width:452pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-top: 1pt;padding-left: 1pt;padding-right: 7pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span class="s42">返回一个迭代器</span><span class="s41">pair</span><span class="s42">，有两个成员迭代器 </span>若<span class="s27">k</span>存在，第一个迭代器指向第一个匹配的元素，第二个迭代器指向最后一个匹配的元素之后的位 置，来表示关键字<span class="s27">=</span>k的元素的范围。</p><p class="s28" style="padding-left: 1pt;text-indent: 0pt;line-height: 12pt;text-align: left;">若k不存在，pair的两个成员均等于c.end()</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 23pt;text-indent: -15pt;line-height: 14pt;text-align: left;"><span class="s40">pair</span><span class="p">类型：定义在</span><span class="s40">&lt;utility&gt;</span><span class="p">中 </span>一个<span class="s26">pair</span>保存两个数据成员，是一个用来生成特定类型的模板 创建一个<span class="s26">pair</span>时必须提供两个类型名</p><p class="s26" style="padding-left: 23pt;text-indent: 15pt;line-height: 14pt;text-align: left;">pair&lt;string,string&gt; anon <span class="s6">； 两个数据成员是</span>public<span class="s6">的，分别命名为</span>first,second</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:20.87pt" cellspacing="0"><tr style="height:17pt"><td style="width:119pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">pair<span class="s42">上的操作</span></p></td><td style="width:287pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:119pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">pair&lt;T1,T2&gt;    <span class="s42">p</span></p></td><td style="width:287pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:119pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">pair&lt;T1,T2&gt; p (v1,v2)</p></td><td style="width:287pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:119pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">pair<span class="s42">&lt;T1,T2&gt; p = {v1,v2}</span></p></td><td style="width:287pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:119pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s27" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">make_pair(v1,v2)</p></td><td style="width:287pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s28" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">返回一个用<span class="s27">v1,v2</span>初始化的<span class="s27">pair</span>，<span class="s27">pair</span>的类型从<span class="s27">v1</span>，<span class="s27">v</span>2上推断出来</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s26" style="padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 14pt;text-align: left;">pair<span class="s6">的</span>first<span class="s6">成员是一个迭代器，指向给定关键字的元素。</span></p><p class="s26" style="padding-left: 34pt;text-indent: 0pt;line-height: 14pt;text-align: left;">second<span class="s6">成员是一个</span>bool<span class="s6">值，表示插入成功还是已经存在于容器中。</span></p><p class="s65" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">map</p><p class="s38" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s39">年</span>2<span class="s39">月</span>13<span class="s39">日    </span>15:33</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s66" style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">简单例子</p><p class="s66" style="padding-left: 27pt;text-indent: 0pt;line-height: 14pt;text-align: left;">map&lt;string, size_t&gt; word_count;</p><p class="s66" style="padding-left: 27pt;text-indent: 0pt;line-height: 14pt;text-align: left;">string word;</p><p class="s66" style="padding-left: 27pt;text-indent: 0pt;line-height: 15pt;text-align: left;">while (cin &gt;&gt; word)     <span class="s67">//</span>如果<span class="s67">word</span>还未在 <span class="s67">map</span>中，下标运算符会创建一个新元素，关键字是<span class="s67">word</span>，值为<span class="s67">0</span></p><p class="s66" style="padding-left: 38pt;text-indent: 0pt;line-height: 14pt;text-align: left;">++word_count[word];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s66" style="padding-top: 1pt;padding-left: 26pt;text-indent: 0pt;line-height: 15pt;text-align: left;">for (const auto &amp;w : word_count)  <span class="s67">//</span>注意是常量引用！</p><p class="s66" style="padding-left: 21pt;text-indent: 16pt;line-height: 14pt;text-align: left;">cout &lt;&lt; w.first &lt;&lt; &quot; occurs &quot; &lt;&lt; w.second &lt;&lt; &quot; times&quot; &lt;&lt; endl; 当从<span class="s67">map</span>中提取一个元素时，会得到一个<span class="s67">pair</span>类型的对象，<span class="s67">pair</span>是一个模板类型 保存两个名为<span class="s67">first</span>和<span class="s67">second</span>的（公有）数据成员（不是成员函数！！）。 <span class="s67">map</span>所使用的<span class="s67">pair</span>用<span class="s67">firtst</span>成员保存关键字，<span class="s67">second</span>成员保存对应值！</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s67" style="padding-left: 21pt;text-indent: 0pt;line-height: 14pt;text-align: left;">map<span class="s66">和</span>unordered_map<span class="s66">提供下标运算符和</span>at<span class="s66">函数 （</span>set<span class="s66">不支持下标） 但</span>multi-<span class="s66">版本的</span>map<span class="s66">没有下标操作，因为无法一一映射 </span>map<span class="s66">下标运算符接受一个索引（即关键字），获取与关键字相关联的值。</span></p><p class="s66" style="padding-left: 97pt;text-indent: 0pt;line-height: 90%;text-align: left;">返回类型是：<span class="s67">mapped_type </span>解引用一个<span class="s67">map</span>迭代器时返回类型是：<span class="s67">value</span>_type</p><p style="text-indent: 0pt;text-align: left;"><span><img width="568" height="19" alt="image" src="C++Primer/Image_002.png"/></span></p><p class="s66" style="padding-left: 21pt;text-indent: 0pt;line-height: 14pt;text-align: left;">如果关键字不在<span class="s67">map</span>中，会为它创建一个元素并插入到<span class="s67">map</span>中，关联值将进行值初始化！</p><p class="s66" style="padding-left: 21pt;text-indent: 0pt;line-height: 14pt;text-align: left;">故可以用下标来创建新的元素。例如：</p><p class="s67" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 13pt;text-align: left;">map &lt;string,size_t&gt;  word_count;</p><p class="s67" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">word_count[&quot;Anna&quot;]=1;   //<span class="s66">初始化关键字</span>Anna<span class="s66">对应的值为</span>1<span class="s66">！</span></p><p class="s66" style="padding-left: 21pt;text-indent: 0pt;line-height: 15pt;text-align: left;">也因为下标为给<span class="s67">map</span>添加新元素，所以要小心使用</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s66" style="padding-top: 1pt;padding-left: 21pt;text-indent: 0pt;line-height: 15pt;text-align: left;">也可以用<span class="s67">at</span>函数访问值：</p><p class="s67" style="padding-left: 38pt;text-indent: 0pt;line-height: 15pt;text-align: left;">c.at(k)       <span class="s66">： 访问关键字为</span>k<span class="s66">的元素，若</span>k<span class="s66">不在</span>c<span class="s66">中，抛出</span>out_of_range<span class="s66">异常</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s66" style="padding-top: 3pt;padding-left: 38pt;text-indent: -16pt;line-height: 14pt;text-align: left;">如果一个<span class="s67">multimap</span>或<span class="s67">multiset</span>中有多个元素具有给定关键字，则这些元素在容器中会相邻存储 因此，假如想要打印一个作者的所有著作，可以利用连续存储这一特性：</p><p class="s66" style="padding-left: 92pt;text-indent: 0pt;line-height: 13pt;text-align: left;">multimap&lt;string, string&gt; authors;</p><p class="s66" style="padding-left: 93pt;text-indent: 0pt;text-align: left;">string search_item(&quot;Alain de Botton&quot;); // author we&#39;ll look for auto entries = authors.count(search_item); // number of elements</p><p class="s66" style="padding-left: 93pt;text-indent: 0pt;line-height: 14pt;text-align: left;">auto iter = authors.find(search_item); // first entry for this author</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s66" style="padding-top: 1pt;padding-left: 93pt;text-indent: 0pt;text-align: left;">// loop through the number of entries there are for this author while(entries) {</p><p class="s66" style="padding-left: 104pt;text-indent: 0pt;line-height: 14pt;text-align: left;">cout &lt;&lt; iter-&gt;second &lt;&lt; endl; // print each title</p><p class="s66" style="padding-left: 104pt;text-indent: 0pt;line-height: 14pt;text-align: left;">++iter;     // advance to the next title</p><p class="s66" style="padding-left: 104pt;text-indent: 0pt;line-height: 14pt;text-align: left;">--entries;  // keep track of how many we&#39;ve printed</p><p class="s66" style="padding-left: 87pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s68" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">set</p><p class="s2" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s3">年</span>2<span class="s3">月</span>13<span class="s3">日    </span>15:33</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 7pt;padding-left: 174pt;text-indent: 0pt;text-align: center;">分区 关联容器 的第 <span class="s7">54 </span>页</p><p class="s37" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">无序容器</p><p class="s24" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>22<span class="s25">日    </span>15:28</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 27pt;text-align: left;">无序容器不是以比较运算符来组织元素的，而是用一个哈希函数，和关键字类型的<span class="s40">==</span>运算符 无序容器提供了与有序容器相同的操作。</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">有<span class="s40">4</span>中类型，都是有序容器前加  <span class="s40">unordered_</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">无序容器在存储上组织为一组桶，用一个哈希函数把元素映射到桶 为了访问一个元素，容器首先计算元素的哈希值，指出应该搜索哪个桶，容器将具有一个特定哈希值的所有元素都保 存在相同的桶中，若<span class="s40">multi-</span>版本，则所有具有相同关键字的元素也都会在一个桶中。 但是若一个桶中保存了很多元素，那么查找一个特定元素就需要大量比较操作</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.65pt" cellspacing="0"><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">无序容器的管理操作</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">桶接口</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">c.bucket_count()</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">正在使用的桶数量</p></td></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">c.max_bucket_count()</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">容器能容纳的最大的桶数量</p></td></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">c.bucket_size(n)</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">第<span class="s41">n</span>个桶中有多少元素</p></td></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">c.bucket(k)</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">关键字为<span class="s41">k</span>的元素在哪个桶中</p></td></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">桶迭代</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:101pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">……</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p class="s1" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">搜索</p><p class="s2" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s3">年</span>2<span class="s3">月</span>8<span class="s3">日    </span>15:32</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 24pt;text-align: left;">二分搜索：（前提：有序序列）</p><p class="s5" style="padding-left: 32pt;text-indent: 0pt;line-height: 25pt;text-align: left;">//<span class="s4">利用迭代器：</span></p><p class="s4" style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;line-height: 23pt;text-align: left;">auto beg = text.begin() , end = text.end() ; auto mid = text.begin() + (end - beg) / 2; while (mid != end &amp;&amp; *mid != sought)</p><p class="s4" style="padding-left: 32pt;text-indent: 0pt;line-height: 21pt;text-align: left;">{</p><p class="s4" style="padding-top: 2pt;padding-left: 104pt;text-indent: -36pt;line-height: 23pt;text-align: left;">if (sought &lt; *mid) end = mid ;</p><p class="s4" style="padding-left: 68pt;text-indent: 0pt;line-height: 21pt;text-align: left;">else</p><p class="s4" style="padding-left: 104pt;text-indent: 0pt;line-height: 23pt;text-align: left;">beg = mid + 1;</p><p class="s4" style="padding-left: 68pt;text-indent: 0pt;line-height: 23pt;text-align: left;">mid = beg + (end - beg) / 2;</p><p class="s4" style="padding-left: 32pt;text-indent: 0pt;line-height: 24pt;text-align: left;">}</p><p class="s31" style="padding-left: 5pt;text-indent: 0pt;line-height: 19pt;text-align: left;">泛型算法综述</p><p class="s61" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">2015<span class="s69">年</span>2<span class="s69">月</span>12<span class="s69">日    </span>15:38</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">大多数算法定义在<span class="s71">&lt;algorithm&gt;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">一般泛型算法并不直接操作容器，而是遍历两个迭代器的范围进行操作 所以算法只会运行在迭代器之上，不会改变底层容器大小，只可能改变容器中所保存元素的值 也可能在容器中移动元素</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s70" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">对于只读算法，用<span class="s71">cbegin</span>（）<span class="s71">,cend</span>（）版本迭代器</p><p class="s23" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">搜索</p><p class="s24" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>12<span class="s25">日    </span>15:53</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:4.87pt" cellspacing="0"><tr style="height:58pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">find(b,e,val);</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;padding-right: 32pt;text-indent: 0pt;line-height: 93%;text-align: left;">返回指向第一个等于给定值的元素的迭代器 如果无匹配元素，则<span class="s41">find</span>返回第二个参数来表示搜索失败 <span class="s41">PS</span>：由于指针就如同内置数组上的迭代器一样，所用可用<span class="s41">find</span>来在数组中查找值 如：<span class="s41">int *result = find(begin(ia),end(ia),val) ;</span></p></td></tr><tr style="height:31pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">find<span class="s42">_if ( b,e,cmp )</span></p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;padding-right: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">find_if<span class="s42">算法对输入序列的每个元素调用给定的这个谓词，返回第一个使谓词返回非</span>0<span class="s42">的 元素，若不存在这样的元素，返回尾迭代器</span></p></td></tr><tr style="height:17pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">find<span class="s42">_if</span>_not  <span class="s42">( b,e,cmp )</span></p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回第一个使谓词返回为<span class="s41">0</span>的元素</p></td></tr><tr style="height:17pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">count(b,e,val)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个计数器，指出<span class="s41">val</span>出现了多少次</p></td></tr><tr style="height:17pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">count_if(b,e,cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">统计有多少个使<span class="s41">cmp</span>为非<span class="s41">0</span>元素</p></td></tr><tr style="height:17pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">all_of(b,e,cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个<span class="s41">bool</span>值，是否对所有元素都成功</p></td></tr><tr style="height:17pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">any_of(b,e,cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个<span class="s41">bool</span>值，是否对任一个元素都成功</p></td></tr><tr style="height:17pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">none_of(b,e,cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个<span class="s41">bool</span>值，是否对所有元素都不成功</p></td></tr><tr style="height:31pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;padding-right: 46pt;text-indent: 0pt;text-align: left;">search(b1,e1,b2,e2) search(b1,e1,b2,e2,cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 1pt;padding-right: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回第二个输入范围（子序列）在第一个输入范围中第一次出现的位置，若未找到， 返回<span class="s41">e1</span></p></td></tr><tr style="height:31pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;padding-right: 21pt;text-indent: 0pt;text-align: left;">find_first_of(b1,e1,b2,e2) find_first_of(b1,e1,b2,e2,cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 1pt;padding-right: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回第二个输入范围内任意元素在第一个范围中首次出现的位置的迭代器，未找到返 回<span class="s41">e1</span></p></td></tr><tr style="height:30pt"><td style="width:155pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;line-height: 12pt;text-align: left;">find_end(b1,e1,b2,e2)</p><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">find_end(b1,e1,b2,e2<span class="s42">，</span>cmp)</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回第二个输入范围在第一个输入范围内，最后一次出现的位置。未找到返回<span class="s41">e1</span></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:4.87pt" cellspacing="0"><tr style="height:30pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">二分搜索算法</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">每个算法两个版本，第一个版本默认用<span class="s41">&lt;</span>来检测元素，第二个版本使用给定的比较操作</p><p class="s41" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">cmp</p></td></tr><tr style="height:29pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;padding-right: 23pt;text-indent: 0pt;text-align: left;">lower_bound(b,e,val) lower_bound(b,e,val,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个迭代器，表示第一个小于等于<span class="s41">val</span>的元素。不存在返回<span class="s41">e</span></p></td></tr><tr style="height:29pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;padding-right: 22pt;text-indent: 0pt;text-align: left;">upper_bound(b,e,val) upper_bound(b,e,val,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个迭代器，表示第一个大于<span class="s41">val</span>的元素。不存在返回<span class="s41">e</span></p></td></tr><tr style="height:31pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;padding-right: 27pt;text-indent: 0pt;text-align: left;">equal_range(b,e,val) equal_range(b,e,val,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 1pt;padding-right: 11pt;text-indent: 0pt;line-height: 14pt;text-align: left;">返回一个<span class="s41">pair</span>，其<span class="s41">first</span>成员是<span class="s41">lower_bound</span>返回的迭代器，<span class="s41">second</span>成员是<span class="s41">upper_bound</span>返回 的迭代器</p></td></tr><tr style="height:31pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;padding-right: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">bin<span class="s42">ary_search(b,e,val) </span>bin<span class="s42">ary_search(b,e,v</span>al,cmp<span class="s42">)</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个<span class="s41">bool</span>，指出是否包含<span class="s41">=val</span>的元素</p></td></tr></table><p class="s52" style="padding-left: 8pt;text-indent: 0pt;line-height: 21pt;text-align: left;">其他</p><p class="s45" style="padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">2015<span class="s46">年</span>2<span class="s46">月</span>12<span class="s46">日    </span>15:58</p><p style="text-indent: 0pt;text-align: left;"><span><img width="712" height="34" alt="image" src="C++Primer/Image_003.png"/></span></p><p class="s14" style="padding-top: 28pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">count<span class="s13">（</span>b<span class="s13">,e,val）  返回给定</span>val<span class="s13">在序列中出现的次数</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s72" style="padding-left: 158pt;text-indent: 0pt;text-align: left;">分区 泛型算法 的第 <span class="s73">63 </span>页</p><p class="s37" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">计算</p><p class="s38" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s39">年</span>2<span class="s39">月</span>13<span class="s39">日   </span>11:31</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.19pt" cellspacing="0"><tr style="height:18pt"><td style="width:121pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">accumulate<span class="s42">（</span>b,e,n<span class="s42">）</span></p></td><td style="width:430pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">求<span class="s41">b,e</span>返回内元素之和，返回和，<span class="s41">n</span>表示和的初始值（对<span class="s41">string</span>操作时，相当于连接字符串）</p></td></tr><tr style="height:18pt"><td style="width:121pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">accumulate<span class="s75">（</span>b,e,n,cmp<span class="s75">）</span></p></td><td style="width:430pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">用<span class="s74">cmp</span>定义的算术运算符来计算</p></td></tr><tr style="height:18pt"><td style="width:121pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">inner_product(b1,e1,b2,n)</p></td><td style="width:430pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">求两个序列内积，即对应元素乘积之和</p></td></tr><tr style="height:18pt"><td style="width:121pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:430pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s76" style="padding-left: 110pt;text-indent: 0pt;text-align: left;">分区 泛型算法 的第 <span class="s77">64 </span>页</p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">比较</p><p class="s78" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s79">年</span>2<span class="s79">月</span>13<span class="s79">日    </span>11:35</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.15pt" cellspacing="0"><tr style="height:28pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">equal<span class="s81">（</span>b,e,b2<span class="s81">）</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s81" style="padding-left: 1pt;padding-right: 243pt;text-indent: 0pt;line-height: 12pt;text-align: left;">比较两个序列是否保存相同值， 如果相等返回<span class="s80">true</span>，如果不相等返回<span class="s80">false</span></p></td></tr><tr style="height:28pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">mismatch(b1,e1,b2)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s81" style="padding-left: 1pt;padding-right: 2pt;text-indent: 0pt;line-height: 12pt;text-align: left;">比较两个序列中元素，返回一个<span class="s80">pair</span>，表示两个序列中第一个不匹配的元素 若都匹配，返回的<span class="s80">pair</span>的第一个迭代器为<span class="s80">e1,</span>第二个迭代器为<span class="s80">b2</span>中偏移量等于第一个序列长度的位置</p></td></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s81" style="padding-left: 1pt;text-indent: 0pt;line-height: 12pt;text-align: left;">最大值最小值</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">max<span class="s81">与</span>min<span class="s81">一致</span></p></td></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">min(val1,val2)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">min(val1,val2,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">min(list)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">min(list,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">minmax(val1,val2)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s81" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">返回一个<span class="s80">pair</span>，<span class="s80">first</span>成员是最小值，<span class="s80">second</span>是最大值</p></td></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">minmax(val1,val2,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">minmax(list)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">minmax(list,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">min<span class="s81">_element</span>(b,e)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">_element<span class="s81">版本返回各自前函数所对应元素的迭代器</span></p></td></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">min_element(b,e,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">max_element(b,e)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">max_element(b,e,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">min<span class="s81">max_element(b,e)</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:16pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s80" style="padding-left: 1pt;text-indent: 0pt;line-height: 13pt;text-align: left;">min<span class="s81">max_element(b,e</span>,cmp<span class="s81">)</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:15pt"><td style="width:143pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p class="s37" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">添加与删除元素</p><p class="s38" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s39">年</span>2<span class="s39">月</span>13<span class="s39">日    </span>11:38</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.37pt" cellspacing="0"><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">添加元素</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">fill<span class="s75">(b,e,val)</span></p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s74">val</span>写入序列中的每个元素</p></td></tr><tr style="height:32pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">fill_n(b,n,val)</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s74">val</span>分别赋值给<span class="s74">b</span>及之后的<span class="s74">n</span>个元素</p><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">（切记，<span class="s74">b,e</span>内要有足够的空间能够存放）</p></td></tr><tr style="height:32pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">copy<span class="s75">(b,e,b1)</span></p><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">copy_n<span class="s75">(b,n,dest)</span></p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-top: 1pt;padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">把<span class="s74">b,e</span>范围内的内容拷贝到<span class="s74">b1</span>开始的容器中。返回最后一个拷贝元素之后的 位置的迭代器</p></td></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">copy_if(b,e,dest,cmp)</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将输入范围内满足<span class="s74">cmp</span>谓词函数的数拷贝到<span class="s74">dest</span>中</p></td></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">move<span class="s75">(b,e,dest)</span></p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将序列内元素移动到<span class="s74">dest</span>中</p></td></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">transform(b,e,dest,cmp)</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s74">b,e</span>中满足谓词函数的元素写到<span class="s74">dest</span>中</p></td></tr><tr style="height:31pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">replace<span class="s75">(b,e,key,val)</span></p><p class="s74" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">replace_if(b,e,cmp,val)</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将序列所有<span class="s74">=key</span>的元素替换为<span class="s74">val</span></p></td></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">replace_copy(b,e,dest,key,val)</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将序列所有<span class="s74">=key</span>的元素替换为<span class="s74">val</span>后保存到<span class="s74">dest</span>为首的序列中</p></td></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">replace_copy_if(b,e,dest,cmp,val)</p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将序列所有满足<span class="s74">cmp</span>的元素替换为<span class="s74">val</span>后保存到<span class="s74">dest</span>为首的序列中</p></td></tr><tr style="height:32pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;padding-right: 17pt;text-indent: 0pt;line-height: 14pt;text-align: left;">merge(b1,e1,b2,e2,dest) merge<span class="s75">(b1,e1,b2,e2,dest,cmp)</span></p></td><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">两个序列必须都是有序的，将合并后的序列写入<span class="s74">dest,</span></p><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">第一个版本用<span class="s74">&lt;</span>运算符比较，第二个版本用<span class="s74">cmp</span>自定义操作比较</p></td></tr><tr style="height:18pt"><td style="width:169pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:358pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s66" style="padding-left: 24pt;text-indent: -16pt;line-height: 94%;text-align: left;">保证算法有足够的元素空间来输出数据的方法是使用插入迭代器： <span class="s67">back_inserter </span>是定义在头文件 <span class="s67">iterator </span>中的一个函数 接受一个指向容器的引用，返回一个与该容器绑定的插入迭代器</p><p class="s66" style="padding-left: 24pt;text-indent: 0pt;line-height: 15pt;text-align: left;">当通过此迭代器赋值时，赋值运算符会调用<span class="s67">push_back        </span>，将一个具有给定值的元素添加到容器中</p><p class="s66" style="padding-left: 24pt;text-indent: 0pt;line-height: 15pt;text-align: left;">如<span class="s67">fill_n(back_inserter(vec),10,0)        </span>；添加<span class="s67">10</span>个元素到<span class="s67">vec</span>中，<span class="s67">vec</span>一开始可以为空</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:21.75pt" cellspacing="0"><tr style="height:18pt"><td style="width:174pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">“删除”元素</p></td><td style="width:360pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:32pt"><td style="width:174pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">remove(b,e,val)</p></td><td style="width:360pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-top: 1pt;padding-left: 2pt;padding-right: 1pt;text-indent: 0pt;line-height: 14pt;text-align: left;">从序列中“删除”<span class="s74">=val</span>的元素，采用的方法是用保留元素覆盖要删除的元素 返回最后一个删除元素的尾后位置</p></td></tr><tr style="height:18pt"><td style="width:174pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">remove_i<span class="s75">f</span>(b,e,cmp)</p></td><td style="width:360pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:174pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">remove_copy(b,e,dest,val)</p></td><td style="width:360pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:174pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">remove_copy_if(b,e,dest,cmp)</p></td><td style="width:360pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p class="s37" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">排列</p><p class="s24" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>13<span class="s25">日    </span>12:03</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.59pt" cellspacing="0"><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">sort<span class="s42">(b,e)</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">按<span class="s41">&lt;</span>的顺序重排</p></td></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">sort(b,e,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stable_sort(b,e)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">stable_sort(b,e,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:18pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">is<span class="s42">_sorted(b,e)</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">返回一个<span class="s41">bool</span>，是否有序</p></td></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">is_sorted(b,e,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">is_sorted_until(b,e)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">在输入序列中查找最长初始有序子序列，并返回子序列的尾后迭代器</p></td></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">is_sorted_until(b,e,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:87pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 2pt;padding-right: 57pt;text-indent: 0pt;line-height: 14pt;text-align: left;">unique(b,e) unique<span class="s42">(b,e,cmp)</span></p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: left;">在使用<span class="s41">unique</span>之前，要对序列进行排序，确保相同元素相邻出现 <span class="s41">unique</span>算法将相邻重复项消除，使得不重复的元素出现在容器的开始部分， 并返回一个指向不重复范围之后第一个元素的迭代器（算法并不能删除重复元素，需要 自己手动删除）</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">这时，可以手动调用<span class="s41">C.erase( end_unique,C.end() ) ;</span>来删除所有重复元素</p></td></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">unique_copy(b,e,dest)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:17pt"><td style="width:139pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">unique_copy_if(b,e,dest,cmp)</p></td><td style="width:415pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr></table><p class="s82" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">list<span class="s62">与</span>forward<span class="s62">_list的特定容器算法</span></p><p class="s38" style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s39">年</span>2<span class="s39">月</span>13<span class="s39">日    </span>15:05</p><p class="s66" style="padding-top: 17pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">对于链表类型，使用通用算法代价太高，应该优先使用成员函数版本的算法！</p><p class="s66" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">链表版本的算法通过改变元素间链接而不是真正交换它们的值，所有性能更好</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.34pt" cellspacing="0"><tr style="height:18pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">list<span class="s75">与</span>forward_list<span class="s75">成员函数版本的算法</span></p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">都返回<span class="s74">void</span></p></td></tr><tr style="height:62pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;padding-right: 81pt;text-indent: 0pt;line-height: 14pt;text-align: left;">lst.merge(lst2) lst<span class="s75">.merge(lst2,cmp)</span></p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-top: 1pt;padding-left: 2pt;padding-right: 97pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将来自<span class="s74">lst2</span>的元素合并入<span class="s74">lst</span>，<span class="s74">lst</span>和<span class="s74">lst2</span>都必须是有序的。 且合并后元素将从<span class="s74">lst2</span>中删除，<span class="s74">lst2</span>变空。 第一个版本使用<span class="s74">&lt;</span></p><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 13pt;text-align: left;">第二个版本自定义</p></td></tr><tr style="height:31pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;padding-right: 93pt;text-indent: 0pt;text-align: left;">lst.remove(val) lst.remove_if(pred)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">调用<span class="s74">erase</span>删除掉给定值相等或令<span class="s74">pred</span>为真的每个元素</p></td></tr><tr style="height:18pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">lst.reverse()</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">反转<span class="s74">lst</span>中元素的顺序</p></td></tr><tr style="height:32pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;padding-right: 124pt;text-indent: 0pt;text-align: left;">lst<span class="s75">.sort() </span>lst.sort(cmp)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:47pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">lst<span class="s75">.unique()</span></p><p class="s74" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">lst.unique(pred)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-top: 1pt;padding-left: 2pt;padding-right: 194pt;text-indent: 0pt;line-height: 15pt;text-align: left;">调用<span class="s74">erase</span>删除相同元素的连续拷贝 第一个版本用<span class="s74">== </span>第二个版本用给定的二元谓词</p></td></tr><tr style="height:18pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:31pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;padding-right: 86pt;text-indent: 0pt;text-align: left;">lst.splice(args) flst.splice_affer(args)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 14pt;text-align: left;">见下</p></td></tr><tr style="height:18pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">args<span class="s75">代表：</span></p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"/></tr><tr style="height:47pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">(p,ls2)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">p<span class="s75">是一个指向</span>lst<span class="s75">中元素的迭代器，或者一个指向</span>flst<span class="s75">首前位置的迭代器 函数将</span>lst<span class="s75">2的所有元素移动到lst中的p之前的位置或者flst中p之后的位置 将元素从</span>lst2<span class="s75">中删除</span></p></td></tr><tr style="height:33pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">(p,lst2,p2)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">p2<span class="s75">是一个指向</span>lst2<span class="s75">中位置的有效迭代器，</span></p><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">将<span class="s74">p2</span>指向的元素移动到<span class="s74">lst</span>中，或将<span class="s74">p2</span>之后的元素移动到<span class="s74">flst</span>中</p></td></tr><tr style="height:18pt"><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s74" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">(p,lst2,b,e)</p></td><td style="width:368pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s75" style="padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">将给定范围中的元素从<span class="s74">lst2</span>移动到<span class="s74">lst</span>或<span class="s74">flst</span></p></td></tr></table><p class="s23" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">交换</p><p class="s24" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">2015<span class="s25">年</span>2<span class="s25">月</span>22<span class="s25">日    </span>20:33</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:5.23pt" cellspacing="0"><tr style="height:17pt"><td style="width:132pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-left: 1pt;text-indent: 0pt;line-height: 15pt;text-align: left;">iter<span class="s42">_swap(iter1,iter2)</span></p></td><td style="width:422pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 15pt;text-align: left;">交换两者所表示的元素，返回<span class="s41">void</span></p></td></tr><tr style="height:31pt"><td style="width:132pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s41" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">swap_ranges(b1,e1,b2)</p></td><td style="width:422pt;border-top-style:solid;border-top-width:1pt;border-top-color:#C5C5C5;border-left-style:solid;border-left-width:1pt;border-left-color:#C5C5C5;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#C5C5C5;border-right-style:solid;border-right-width:1pt;border-right-color:#C5C5C5"><p class="s42" style="padding-top: 1pt;padding-left: 2pt;padding-right: 4pt;text-indent: 0pt;line-height: 14pt;text-align: left;">将输入范围内元素与<span class="s41">b2</span>开头的范围内的元素进行交换，两个范围不能有重叠，返回递增后 的<span class="s41">b2</span>，指向最后一个交换元素之后的位置</p></td></tr></table></body></html>
