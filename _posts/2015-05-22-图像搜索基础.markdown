---
layout: post
title: "图像搜索原理" 
comments: true
share: true
tags: 笔记
---


## 灰度图像： ##

灰度（Gray scale）数字图像是每个像素只有一个采样颜色的图像。这类图像通常显示为从最暗黑色到最亮的白色的灰度，尽管理论上这个采样可以任何颜色的不同深浅，甚至可以是不同亮度上的不同颜色。灰度图像与黑白图像不同，在计算机图像领域中黑白图像只有黑白两种颜色，灰度图像在黑色与白色之间还有许多级的颜色深度。但是，在数字图像领域之外，“黑白图像”也表示“灰度图像”。


## 图片搜索原理： ##

1. 缩小尺寸。将图片缩小到8x8的尺寸，总共64个像素。这一步的作用是去除图片的细节，只保留结构、明暗等基本信息，摒弃不同尺寸、比例带来的图片差异。


2. 简化色彩。将缩小后的图片，转为64级灰度。也就是说，所有像素点总共只有64种颜色。


3. 计算平均值。计算所有64个像素的灰度平均值。


4. 比较像素的灰度。将每个像素的灰度，与平均值进行比较。大于或等于平均值，记为1；小于平均值，记为0。


5. 计算哈希值。将上一步的比较结果，组合在一起，就构成了一个64位的整数，这就是这张图片的指纹。组合的次序并不重要，只要保证所有图片都采用同样次序就行了。

6. 得到指纹以后，就可以对比不同的图片，看看64位中有多少位是不一样的。在理论上，这等同于计算"汉明距离"（Hamming distance）。如果不相同的数据位不超过5，就说明两张图片很相似；如果大于10，就说明这是两张不同的图片。

这种算法的优点是简单快速，不受图片大小缩放的影响，缺点是图片的内容不能变更。如果在图片上加几个文字，它就认不出来了。所以，它的最佳用途是根据缩略图，找出原图。

早在2008年，Google公布了一篇图片搜索的论文，和文本搜索的思路是一样的：

- 对于每张图片，抽取其特征。这和文本搜索对于网页进行分词类似。

- 对于两张图片，其相关性定义为其特征的相似度。这和文本搜索里的文本相关性也是差不多的。

- 图片一样有image rank。文本搜索中的page rank依靠文本之间的超链接。图片之间并不存在这样的超链接，image rank主要依靠图片之间的相似性（两张图片相似，便认为它们之间存在超链接）。具有更多相似图片的图片，其image rank更高一些。



----------


另外：

1. 之前还在浙大一套介绍高数在计算机中的应用的课程里看到过，把图片每个像素对应形成一个矩阵，然后让这个矩阵变成一个向量组，再用泰勒展开，通过比较泰勒展开后的每项进行处理比较，得到相似度的判断。

2. Python 自己有图像处理库，可以比较方便的做成灰度等等处理。